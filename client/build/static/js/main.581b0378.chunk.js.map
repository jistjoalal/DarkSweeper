{"version":3,"sources":["img/logo.svg","components/generic.js","components/Tile.js","components/TileGrid.js","components/GameInfo.js","components/GameButtons.js","components/GameInputs.js","components/Popup.js","components/Hiscores.js","components/Game.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","HiddenToggle","props","show","children","range","n","Object","toConsumableArray","Array","keys","Tile","_this$props","this","isRevealed","hasMine","nearby","flag","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","handleTouch","xray","theme","react_default","a","createElement","className","concat","onTouchEnd","onContextMenu","e","preventDefault","Tile_Over","Tile_Under","Component","Over","_ref","Tile_Flag","Under","_ref2","Tile_Mine","Tile_ColoredNumber","ColoredNumber","_ref3","Mine","src","logo","alt","Flag","TileGrid","renderTileAt","i","j","_this$props$gridState","_this","gridState","isHighlighted","isR","hasM","nB","components_Tile","mouseDown","mouseUp","mouseEnter","mouseLeave","_this2","length","map","key","GameInfo","mines","hidden","time","role","aria-label","href","target","GameButtons","newGame","infoOn","xrayOn","toggleInfo","toggleXray","toggleTheme","onClick","GameInputs","nCols","nRows","chance","onColChange","onRowChange","onChanceChange","type","value","min","max","onChange","onKeyUp","step","Popup","text","score","xrayUsed","onSubmit","submitHiscore","autoFocus","placeholder","closePopup","getHiscoresQuery","gql","_templateObject","addHiscoreMutation","_templateObject2","Hiscores","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayHiscores","data","loading","hiscores","hiscore","Hiscores_Hiscore","assign","id","scoreSubmission","name","variables","objectSpread","refetchQueries","query","state","lastSubmission","setState","Hiscore","compose","graphql","NEARBY_COORDS","Game","changedTouches","identifier","handleRightClick","gameStatus","buttons","highlightArea","xrayArea","ignoreNextClick","button","_this$state","includes","nearbyFlags","reveal","eachNearby","ix","jy","handleClick","_this$state2","_this$state3","totalFlags","_gridState$i$j","changeTile","flagChange","newGridState","clearInterval","timer","setInterval","tick","_this$state4","totalHidden","newTheme","v","parseInt","isNaN","parseFloat","_this$state5","hash","crypto","createHash","update","digest","speed","scoreGrid","anyUB","anyUnrevealedBlank","anyUN","anyUnrevealedNumbers","any","forEach","row","tile","_this$state6","Math","random","resetGrid","everyTile","toggle","_gridState$i$j2","gridReduce","countNearby","nearbyMines","sum","callback","c","validTile","reducer","change","slice","totalMines","_this$state7","components_GameButtons","components_GameInputs","components_TileGrid","components_Popup","components_GameInfo","flags","components_Hiscores","_this$state8","toString","_this$state9","client","ApolloClient","uri","App","react_apollo_browser_umd","src_components_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.581b0378.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.eed724ad.svg\";","const HiddenToggle = props => {\r\n  if (props.show) {\r\n      return props.children;\r\n  }return null;\r\n};\r\n\r\n// number range helper\r\nconst range = n => [...Array(n).keys()];\r\n\r\nexport { HiddenToggle, range };","import React, { Component } from 'react';\r\n\r\nimport logo from '../img/logo.svg';\r\n\r\nclass Tile extends Component {\r\n  render() {\r\n    const { isRevealed, hasMine, nearby, flag,\r\n      onMouseDown, onMouseUp, onMouseEnter, onMouseLeave, handleTouch,\r\n      xray, theme } = this.props;\r\n    \r\n    return (\r\n      <div className={`Tile-${theme}`}\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onTouchEnd={handleTouch}\r\n        onContextMenu={e => e.preventDefault()}\r\n      >\r\n        <Over isRevealed={isRevealed} flag={flag} xray={xray} theme={theme}>\r\n          <Under hasMine={hasMine} nearby={nearby} />\r\n        </Over>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// covers revealed tiles\r\nconst Over = ({ isRevealed, flag, children, xray, theme }) =>\r\n  isRevealed ? children :\r\n    <div className={`Cover-${theme}`}>\r\n      {flag ? <Flag /> : xray ? children : null}\r\n    </div>;\r\n  \r\n// whats underneath tile?\r\nconst Under = ({ hasMine, nearby }) =>\r\n  hasMine ? <Mine /> : <ColoredNumber n={nearby} />\r\n\r\n// minesweeper colors in the css!\r\nconst ColoredNumber = ({ n }) =>\r\n  <span className={`nearby${n}`}>\r\n    {n !== 0 ? n : null}\r\n  </span>;\r\n\r\nconst Mine = () => <img className=\"Mine\" src={logo} alt=\"X\" />;\r\n  \r\nconst Flag = () => <span className=\"Flag\">F</span>;\r\n\r\nexport default Tile;","import React, { Component } from 'react';\r\n\r\nimport Tile from './Tile';\r\n\r\nimport { range } from './generic';\r\n\r\nclass TileGrid extends Component {\r\n  \r\n  render() {\r\n    const { gridState } = this.props;\r\n    if (gridState === null) { return null; }\r\n    return range(gridState.length).map((i) =>\r\n      <div key={i} className=\"Game-grid-row\">\r\n        {range(gridState[i].length).map((j) =>\r\n          <this.renderTileAt key={`${i},${j}`} i={i} j={j} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderTileAt = ({ i, j }) => {\r\n    const { isRevealed, hasMine, nearby, flag,\r\n      isHighlighted, xray } = this.props.gridState[i][j];\r\n    // display highlighted tiles as blank\r\n    const isR = isHighlighted ? true : isRevealed,\r\n          hasM = isHighlighted ? false : hasMine,\r\n          nB = isRevealed ? nearby : isHighlighted ? 0 : nearby;\r\n    return <Tile\r\n      isRevealed={isR}\r\n      hasMine={hasM}\r\n      nearby={nB}\r\n      flag={flag}\r\n      xray={xray || this.props.xray}\r\n      theme={this.props.theme}\r\n      onMouseDown={e => this.props.mouseDown(e, i, j)}\r\n      onMouseUp={e => this.props.mouseUp(e, i, j)}\r\n      onMouseEnter={e => this.props.mouseEnter(e, i, j)}\r\n      onMouseLeave={e => this.props.mouseLeave(e, i, j)}\r\n      handleTouch={e => this.props.handleTouch(e, i, j)}\r\n    />;\r\n  }\r\n}\r\n\r\nexport default TileGrid;","import React from 'react';\r\n\r\n// mines left, etc.\r\nconst GameInfo = ({ mines, hidden, time }) =>\r\n  <div className=\"Game-info\">\r\n    <p>\r\n      <span role=\"img\" aria-label=\"bomb\">💣</span> {mines}\r\n      <span role=\"img\" aria-label=\"question\"> ❓</span> {hidden}\r\n      <span role=\"img\" aria-label=\"timer\"> ⏱</span> {time}\r\n    </p>\r\n    <p>\r\n      <span role=\"img\" aria-label=\"ok\">👌 </span>\r\n      Click around with right+left click for a safe start!\r\n    </p>\r\n    <p>\r\n      <span role=\"img\" aria-label=\"score\">💯 </span>\r\n      <a href=\"http://www.minesweeper.info/wiki/3BV\" target=\"blank\">\r\n        Difficulty = minimum # of left clicks to win\r\n      </a>\r\n    </p>\r\n    <p>\r\n      <span role=\"img\" aria-label=\"radioactive\">☢ </span>\r\n      Use middle click to xray (cheat) the area.\r\n    </p>\r\n  </div>;\r\n\r\nexport default GameInfo;","import React, { Component } from 'react';\r\n\r\nclass GameButtons extends Component {\r\n  \r\n  render() {\r\n    const { newGame, infoOn, xrayOn, theme,\r\n      toggleInfo, toggleXray, toggleTheme } = this.props;\r\n    return (\r\n      <div className=\"GameButtons\">\r\n        <button onClick={newGame}\r\n          className=\"Game-button\"\r\n        >New Game\r\n        </button>\r\n        <button onClick={toggleInfo}\r\n          className={`Game-button${infoOn ? ' toggle' : ''}`}\r\n        >Game Info\r\n        </button>\r\n        <button onClick={toggleXray}\r\n          className={`Game-button${xrayOn ? ' toggle' : ''}`}\r\n        >X-RAY\r\n        </button>\r\n        <button onClick={toggleTheme}\r\n          className={`Game-button${theme === 'light' ? ' toggle' : ''}`}\r\n        >Theme\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameButtons;","import React from 'react';\r\n\r\nconst GameInputs = ({ nCols, nRows, chance,\r\n  onColChange, onRowChange, onChanceChange,\r\n  newGame\r\n}) =>\r\n  <div>\r\n    <input className=\"Game-input\"\r\n      type=\"number\" value={nCols} min={1} max={32}\r\n      onChange={onColChange}\r\n      onKeyUp={newGame}/>\r\n    x<input className=\"Game-input\"\r\n      type=\"number\" value={nRows} min={1} max={32}\r\n      onChange={onRowChange}\r\n      onKeyUp={newGame}/>\r\n    x<input className=\"Game-input\"\r\n      type=\"number\" value={chance} min={0} max={1.0} step={0.01}\r\n      onChange={onChanceChange}\r\n      onKeyUp={newGame}/>\r\n  </div>\r\n\r\nexport default GameInputs;","import React from 'react';\r\n\r\nimport { HiddenToggle } from './generic';\r\n\r\n// popup message\r\nconst Popup = props =>\r\n  <HiddenToggle show={props.show}>\r\n    <div className=\"Popup\" onContextMenu={e => e.preventDefault()}>\r\n      <div className=\"Popup-inner\">\r\n        <p>{props.text}</p>\r\n        \r\n        {props.text === 'Winner!' ?\r\n          <div className=\"Popup-score\">\r\n            <p>\r\n              Difficulty: {props.score} | Time: {props.time}\r\n            </p>\r\n\r\n            {/* only record games > 5 seconds long & no cheaters! */\r\n            ( props.time < 5 || props.xrayUsed ) ? null\r\n            : <form onSubmit={e => props.submitHiscore(e)}>\r\n                <input autoFocus className=\"Popup-name\" type=\"text\" placeholder=\"Name\" />\r\n                <input className=\"Popup-submit\" type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n            }\r\n          </div>\r\n        : null}\r\n        \r\n        <button className=\"close\" onClick={props.closePopup}>Back</button>\r\n      </div>\r\n    </div>\r\n  </HiddenToggle>;\r\n\r\nexport default Popup;","import React, {Component} from 'react';\r\nimport { graphql, compose } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\n\r\nconst getHiscoresQuery = gql`\r\n  {\r\n    hiscores{\r\n      id\r\n      name\r\n      score\r\n      time\r\n      speed\r\n    }\r\n  }\r\n`;\r\n\r\nconst addHiscoreMutation = gql`\r\n  mutation($name: String!, $score: Int!, $time: Int!, $speed: Float!){\r\n    addHiscore(name: $name, score: $score, time: $time, speed: $speed){\r\n      id\r\n      name\r\n      score\r\n      time\r\n      speed\r\n    }\r\n  }\r\n`;\r\n\r\nclass Hiscores extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastSubmission: null,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { scoreSubmission } = this.props;\r\n    const { lastSubmission } = this.state;\r\n    if (scoreSubmission !== lastSubmission) {\r\n      this.setState({ lastSubmission: scoreSubmission });\r\n      this.submitHiscore();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HiscoreView\">\r\n        <h2>Top 10:</h2>\r\n        <div className=\"Hiscores\">\r\n          <li className=\"Hiscore\">\r\n            <span className=\"HiscoreHeader\">Name</span>\r\n            <span className=\"HiscoreHeader\">EBV / s</span>\r\n          </li>\r\n          {this.displayHiscores()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  displayHiscores = () => {\r\n    const data = this.props.getHiscoresQuery;\r\n    if (data.loading) {\r\n      return <li>Loading Hiscores...</li>;\r\n    }\r\n    else {\r\n      if (!data.hiscores) {\r\n        return <li>Couldn't connect to DB</li>\r\n      }\r\n      return data.hiscores.map(hiscore => {\r\n        return <Hiscore key={hiscore.id} {...hiscore} />\r\n      })\r\n    }\r\n  }\r\n\r\n  submitHiscore = () => {\r\n    const { scoreSubmission } = this.props;\r\n    if (scoreSubmission.name.length < 1) { return; }\r\n    this.props.addHiscoreMutation({\r\n      variables: { ...scoreSubmission },\r\n      refetchQueries: [{ query: getHiscoresQuery }],\r\n    })\r\n  }\r\n}\r\n\r\nconst Hiscore = ({ name, score, time }) =>\r\n  <li className=\"Hiscore\">\r\n    <span>{name}</span>\r\n    <span>{score} / {time}</span>\r\n  </li>\r\n\r\nexport default compose(\r\n  graphql(getHiscoresQuery, {name: 'getHiscoresQuery'}),\r\n  graphql(addHiscoreMutation, {name: 'addHiscoreMutation'}),\r\n)(Hiscores);","import React, {Component} from 'react';\r\nimport crypto from 'crypto';\r\n\r\nimport './Game.scss';\r\n\r\nimport { range } from './generic';\r\nimport TileGrid from './TileGrid';\r\nimport GameInfo from './GameInfo';\r\nimport GameButtons from './GameButtons';\r\nimport GameInputs from './GameInputs';\r\nimport Popup from './Popup';\r\nimport Hiscores from './Hiscores';\r\n\r\n// adjacent tiles\r\nconst NEARBY_COORDS = [\r\n  [-1, -1], [0, -1], [1, -1],\r\n  [-1, 0], /*[0, 0],*/ [1,0],\r\n  [-1, 1], [0, 1], [1,1]\r\n];\r\n  \r\n\r\n// TODO: refactor\r\n// TODO: better performance? bigger grids?\r\n// TODO: adjust tile size?\r\nclass Game extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // grid\r\n      nRows: 10,\r\n      nCols: 10,\r\n      chance: 0.1,\r\n      gridState: null,\r\n      // info\r\n      totalMines: 0,\r\n      totalFlags: 0,\r\n      totalHidden: 100,\r\n      gameStatus: 'Loading',\r\n      time: 0,\r\n      score: 0,\r\n      // menu\r\n      theme: 'dark',\r\n      xrayOn: false,\r\n      infoOn: false,\r\n      // internal\r\n      ignoreNextClick: false,\r\n      scoreSubmission: null,\r\n      xrayUsed: false,\r\n      hash: null,\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    const { gameStatus, gridState, nRows, nCols, chance,\r\n      totalMines, totalFlags, totalHidden,\r\n      xrayOn, infoOn, theme, time, score, scoreSubmission,\r\n      xrayUsed,\r\n    } = this.state;\r\n      \r\n    return (\r\n      <div className=\"Game\">\r\n        <div className=\"Game-menu\">\r\n          <GameButtons\r\n            newGame={this.newGame}\r\n            infoOn={infoOn}\r\n            xrayOn={xrayOn}\r\n            theme={theme}\r\n            toggleInfo={this.toggleInfo}\r\n            toggleXray={this.toggleXray}\r\n            toggleTheme={this.toggleTheme}\r\n          />\r\n          \r\n          <GameInputs\r\n            nCols={nCols}\r\n            nRows={nRows}\r\n            chance={chance}\r\n            onColChange={this.onColChange}\r\n            onRowChange={this.onRowChange}\r\n            onChanceChange={this.onChanceChange}\r\n            newGame={this.newGame}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"Game-grid\">\r\n          <TileGrid\r\n            gridState={gridState}\r\n            xray={xrayOn}\r\n            theme={theme}\r\n            mouseDown={this.mouseDown}\r\n            mouseUp={this.mouseUp}\r\n            mouseEnter={this.mouseEnter}\r\n            mouseLeave={this.mouseLeave}\r\n            handleTouch={this.handleTouch}\r\n          />\r\n          <Popup\r\n            text={gameStatus}\r\n            xrayUsed={xrayUsed}\r\n            score={score}\r\n            time={time}\r\n            submitHiscore={this.submitHiscore}\r\n            closePopup={this.newGame}\r\n            show={gameStatus !== 'Playing'}\r\n          />\r\n        </div>\r\n        \r\n        {infoOn ?\r\n        <GameInfo\r\n          mines={totalMines} flags={totalFlags} hidden={totalHidden} time={time}\r\n        /> : null}\r\n\r\n        <Hiscores scoreSubmission={scoreSubmission} />\r\n        \r\n        <footer>\r\n          <a href=\"https://github.com/jistjoalal/DarkSweeper\">\r\n            <i className=\"fa fa-2x fa-github\"></i>\r\n          </a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.newGame();\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    const { totalHidden, totalMines,\r\n      nRows, nCols, gameStatus, gridState } = this.state;\r\n    \r\n    // new game = calculate nearby numbers, total mines, and reset game\r\n    if (gameStatus === 'New Game') {\r\n      this.countNearby();\r\n      this.setState({\r\n        totalMines: this.gridReduce((i, j) =>\r\n          gridState[i][j].hasMine ? 1 : 0),\r\n        totalFlags: 0,\r\n        totalHidden: nRows * nCols,\r\n        time: 0,\r\n        score: 0,\r\n        gameStatus: 'Playing'\r\n      });\r\n    }\r\n    \r\n    // win condition\r\n    if (totalHidden === totalMines\r\n      // avoid auto-wins\r\n      && totalHidden !== nRows * nCols) \r\n    {\r\n      // total mines is set to string to prevent infinite loop\r\n      // and still appear the same\r\n      this.setState({ gameStatus: 'Scoring',\r\n      totalMines: totalMines.toString() });\r\n      // reset grid for scoring\r\n      clearInterval(this.timer);\r\n      this.resetGrid();\r\n    }\r\n    \r\n    if (gameStatus === 'Scoring') {\r\n      this.setState({\r\n        gameStatus: 'Hashing',\r\n        score: this.scoreGrid(),\r\n      });\r\n    }\r\n    \r\n    if (gameStatus === 'Hashing') {\r\n      const { score, time } = this.state;\r\n      this.setState({\r\n        gameStatus: 'Winner!',\r\n        hash: crypto.createHash('sha1').update(`${score} ${time}`).digest('base64'),\r\n      });\r\n    }\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n  \r\n  /*\r\n    Mouse / Touch\r\n  */\r\n\r\n  // 2nd touch point sets flag\r\n  handleTouch = (e, i, j) => {\r\n    if (e.changedTouches[0].identifier === 1) {\r\n      this.handleRightClick(i, j);\r\n    }\r\n  }\r\n  \r\n  mouseEnter = (e, i, j) => {\r\n    const { gameStatus } = this.state;\r\n    if (gameStatus !== 'Playing') { return; }\r\n    // \"both\" down\r\n    if (e.buttons === 3) { this.highlightArea(i, j, true); }\r\n    // middle down\r\n    if (e.buttons === 4) { this.xrayArea(i, j, true); }\r\n  }\r\n  \r\n  mouseLeave = (e, i, j) => {\r\n    // \"both\" down\r\n    if (e.buttons === 3) { this.highlightArea(i, j, false); }\r\n    // middle down\r\n    if (e.buttons === 4) { this.xrayArea(i, j, false); }\r\n  }\r\n  \r\n  mouseDown = (e, i, j) => {\r\n    e.preventDefault(); // prevents click-drag to highlight text\r\n    const { gameStatus } = this.state;\r\n    if (gameStatus !== 'Playing') { return; }\r\n    // \"both\" down\r\n    if (e.buttons === 3) {\r\n      this.setState({ ignoreNextClick: true });\r\n      this.highlightArea(i, j, true);\r\n    }\r\n    // middle down\r\n    if (e.button === 1) { this.xrayArea(i, j, true); }\r\n  }\r\n  \r\n  mouseUp = (e, i, j) => {\r\n    const { ignoreNextClick, gridState } = this.state;\r\n\r\n    // \"both\" up\r\n    if ([1,2].includes(e.buttons)) {\r\n      this.setState({ ignoreNextClick: true });\r\n      this.highlightArea(i, j, false);\r\n      // if nearby mines == nearby flags, reveal this + nearby tiles\r\n      // - !hasMine makes simultaneous click safe!\r\n      if (gridState[i][j].nearby === this.nearbyFlags(i, j)\r\n        && !gridState[i][j].hasMine)\r\n      {\r\n        this.reveal(i, j);\r\n        this.eachNearby(i, j, (ix, jy) => {\r\n          this.reveal(ix, jy);\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    // middle up\r\n    if (e.button === 1) { this.xrayArea(i, j, false); }\r\n    // right up\r\n    else if (e.button === 2 && !ignoreNextClick) {\r\n      this.handleRightClick(i, j);\r\n    }\r\n    // left up\r\n    else if (e.button === 0 && !ignoreNextClick) {\r\n      this.handleClick(i, j);\r\n    }\r\n    this.setState({ ignoreNextClick: false });\r\n  }\r\n \r\n  // left click to reveal tile or lose!\r\n  handleClick = (i, j) => {\r\n    const { gridState, gameStatus } = this.state;\r\n    const { flag } = gridState[i][j];\r\n    \r\n    // ignore clicks if game is over or tile is flagged\r\n    if (gameStatus !== 'Playing' || flag) { return; }\r\n    \r\n    // reveal clicked tile\r\n    this.reveal(i, j);\r\n  }\r\n  \r\n  // right click to set flag\r\n  handleRightClick = (i, j) => {\r\n    const { gridState, gameStatus, totalFlags } = this.state;\r\n    const { isRevealed, flag } = gridState[i][j];\r\n    // ignore clicks if game is over or tile revealed\r\n    if (gameStatus !== 'Playing' || isRevealed) { return; }\r\n    \r\n    // toggle flag\r\n    this.changeTile(i, j, { flag: !flag });\r\n    \r\n    // increment total flags\r\n    const flagChange = !flag ? 1 : -1;\r\n    this.setState({ totalFlags: totalFlags + flagChange });\r\n  }\r\n  \r\n  /*\r\n    Game Config\r\n */\r\n  \r\n  newGame = () => {\r\n    this.setState({\r\n      gridState: this.newGridState(), \r\n      gameStatus: 'New Game',\r\n      xrayUsed: false\r\n    });\r\n    clearInterval(this.timer);\r\n    this.timer = setInterval(() => this.tick(), 1000);\r\n  }\r\n  \r\n  tick = () => {\r\n    const { totalHidden, gameStatus, nRows, nCols } = this.state;\r\n    if (totalHidden !== nRows * nCols && gameStatus === 'Playing') {\r\n      this.setState({time: this.state.time + 1});\r\n    }\r\n  }\r\n  \r\n  toggleTheme = () => {\r\n    const { theme } = this.state;\r\n    const newTheme = theme === 'dark' ? 'light' : 'dark';\r\n    this.setState({ theme: newTheme });\r\n  }\r\n  \r\n  toggleInfo = () => {\r\n    this.setState({ infoOn: !this.state.infoOn });\r\n  }\r\n  \r\n  toggleXray = () => {\r\n    this.setState({\r\n      xrayOn: !this.state.xrayOn,\r\n      xrayUsed: true,\r\n    });\r\n  }\r\n\r\n  onColChange = e => {\r\n    const v = parseInt(e.target.value)\r\n    if (v > 0 && v <= 32) {\r\n      this.setState({ nCols: parseInt(e.target.value)})\r\n    }\r\n  }\r\n  onRowChange = e => {\r\n    const v = parseInt(e.target.value)\r\n    if (v > 0 && v <= 32) {\r\n      this.setState({ nRows: parseInt(e.target.value)})\r\n    }\r\n  }\r\n  onChanceChange = e => {\r\n    if (!isNaN(parseFloat(e.target.value))) {\r\n      this.setState({ chance: parseFloat(e.target.value)})\r\n    }\r\n  }\r\n  \r\n  /*\r\n    Scoring\r\n  */\r\n  \r\n  submitHiscore = e => {\r\n    const name = e.target[0].value;\r\n    const { score, time, hash } = this.state;\r\n    const tHash = crypto.createHash('sha1').update(`${score} ${time}`).digest('base64')\r\n    if (tHash === hash) {\r\n      this.setState({scoreSubmission: {\r\n        name, score, time,\r\n        speed: (score / time)\r\n      }});\r\n      this.newGame();\r\n    }\r\n    else {\r\n      this.setState({\r\n        gameStatus: '🚨 Hacker 🚨',\r\n      })\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  \r\n  //hash: `${score} ${time}`\r\n  \r\n  scoreGrid = () => {\r\n    const anyUB = this.anyUnrevealedBlank();\r\n    const anyUN = this.anyUnrevealedNumbers();\r\n    // if any unrevealed blank tile, reveal\r\n    if (anyUB) {\r\n      this.reveal(anyUB.i, anyUB.j);\r\n      return 1 + this.scoreGrid();\r\n    }\r\n    // else if any unrevealed numbers, reveal\r\n    else if (anyUN) {\r\n      this.reveal(anyUN.i, anyUN.j);\r\n      return 1 + this.scoreGrid();\r\n    }\r\n    // else save score\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  anyUnrevealedNumbers = () => {\r\n    const { gridState } = this.state;\r\n    let any = false;\r\n    gridState.forEach((row, i) => {\r\n      row.forEach((tile, j) => {\r\n        if (!tile.isRevealed && !tile.hasMine) {\r\n          any = {i, j};\r\n        }\r\n      })\r\n    })\r\n    return any;\r\n  }\r\n  \r\n  anyUnrevealedBlank = () => {\r\n    const { gridState } = this.state;\r\n    let any = false;\r\n    gridState.forEach((row, i) => {\r\n      row.forEach((tile, j) => {\r\n        if (tile.nearby === 0 && !tile.isRevealed && !tile.hasMine) {\r\n          any = {i, j};\r\n        }\r\n      })\r\n    })\r\n    return any;\r\n  }\r\n  \r\n  /*\r\n    Game\r\n  */\r\n  \r\n  // Grid State = 2d array of tile states\r\n  // - nearby is the # of nearby mines\r\n  newGridState = () => {\r\n    const { nRows, nCols, chance } = this.state;\r\n    return range(nRows).map(i => range(nCols).map(j => {\r\n      return {\r\n        isRevealed: false,\r\n        hasMine: Math.random() < chance,\r\n        nearby: 0,\r\n        flag: false,\r\n        isHighlighted: false,\r\n        xray: false\r\n      };\r\n    }));\r\n  }\r\n  \r\n  resetGrid = () => {\r\n    this.everyTile((i, j) => \r\n      this.changeTile(i, j, { isRevealed: false, flag: false }))\r\n  }\r\n  \r\n  xrayArea = (i, j, toggle) => {\r\n    this.changeTile(i, j, { xray: toggle });\r\n    this.eachNearby(i, j, (ix, jy) => {\r\n      this.changeTile(ix, jy, { xray: toggle });\r\n    });\r\n    this.setState({ xrayUsed: true });\r\n  }\r\n  \r\n  highlightArea = (i, j, toggle) => {\r\n    const { gridState } = this.state;\r\n    // highlight self + nearby unflagged tiles\r\n    this.changeTile(i, j, { isHighlighted: toggle })\r\n    this.eachNearby(i, j, (ix, jy) => {\r\n      if (!gridState[ix][jy].flag) {\r\n        this.changeTile(ix, jy, { isHighlighted: toggle });\r\n      }\r\n    })\r\n  }\r\n  \r\n  // revealed tiles that have 0 nearby mines reveal adjacent tiles\r\n  reveal = (i, j) => {\r\n    const { gridState } = this.state;\r\n    const { nearby, hasMine, flag } = gridState[i][j];\r\n    \r\n    // recursion break\r\n    if (gridState[i][j].isRevealed || flag) { return 0; }\r\n\r\n    // check mine\r\n    if (hasMine) {\r\n      this.changeTile(i, j, {isRevealed: true});\r\n      return this.setState({ gameStatus: 'Game Over'});\r\n    }\r\n    \r\n    // reveal tile\r\n    this.changeTile(i, j, {isRevealed: true});\r\n    \r\n    // recount of totalHidden\r\n    this.setState({\r\n      totalHidden: this.gridReduce((i, j) =>\r\n        gridState[i][j].isRevealed ? 0 : 1\r\n      ),\r\n    });\r\n    \r\n    // recursively clear adjacent tiles if 0 nearby\r\n    if (nearby === 0 && !hasMine) {\r\n      this.eachNearby(i, j, (ix, jy) => {\r\n        this.reveal(ix, jy);\r\n      });\r\n    }\r\n  }\r\n  \r\n  // calculates nearby mines for every tile\r\n  countNearby = () => {\r\n    this.everyTile((i, j) =>\r\n      this.changeTile(i, j, { nearby: this.nearbyMines(i, j) }));\r\n  }\r\n  \r\n  // returns # of mines nearby tile @ (i, j)\r\n  nearbyMines = (i, j) => {\r\n    const { gridState } = this.state;\r\n    let sum = 0;\r\n    this.eachNearby(i, j, (ix, jy) =>\r\n      sum += gridState[ix][jy].hasMine ? 1 : 0);\r\n    return sum;\r\n  }\r\n  \r\n  // returns # of flags nearby tile @ (i, j)\r\n  nearbyFlags = (i, j) => {\r\n    const { gridState } = this.state;\r\n    let sum = 0;\r\n    this.eachNearby(i, j, (ix, jy) =>\r\n      sum += gridState[ix][jy].flag ? 1 : 0);\r\n    return sum;\r\n  }\r\n  \r\n  // runs callback on each nearby tile that exists\r\n  eachNearby = (i, j, callback) => {\r\n    NEARBY_COORDS.forEach(c => {\r\n      const ix = i + c[0],\r\n            jy = j + c[1];\r\n      if (this.validTile(ix, jy)) {\r\n        callback(ix, jy);\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 2d array summing thing\r\n  gridReduce = reducer => {\r\n    let sum = 0;\r\n    this.everyTile((i, j) =>\r\n      sum += reducer(i, j));\r\n    return sum;\r\n  }\r\n  \r\n  // assign change to tile @ (i, j)\r\n  changeTile = (i, j, change) => {\r\n    const gridState = this.state.gridState.slice();\r\n    Object.assign(gridState[i][j], change);\r\n    this.setState({ gridState });\r\n  }\r\n  \r\n  // callback to 2d array\r\n  everyTile = callback =>\r\n    this.state.gridState.map((row, i) => row.map((tile, j) => callback(i, j)))\r\n  \r\n  // boolean if tile exists at i,j coords\r\n  validTile = (i, j) =>\r\n    typeof this.state.gridState[i] === 'undefined' ? false :\r\n      typeof this.state.gridState[i][j] !== 'undefined'\r\n}\r\n\r\nexport default Game;","import React, {Component} from 'react';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\n\r\nimport Game from './components/Game';\r\n\r\nconst client = new ApolloClient({\r\n  uri: '/graphql'\r\n})\r\n\r\n// TODO: hiscores page with sorting and pagination (just to view)\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <Game />\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nif (module.hot) {\r\n    module.hot.accept();\r\n}\r\n"],"sourceRoot":""}