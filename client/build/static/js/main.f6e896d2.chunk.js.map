{"version":3,"sources":["img/logo.svg","components/generic.js","components/Tile.js","components/TileGrid.js","components/GameInfo.js","components/GameButtons.js","components/GameInputs.js","components/Popup.js","queries.js","components/HiscoreSubmitter.js","components/HiscorePage.js","components/Game.js","components/HiscorePages.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","HiddenToggle","props","show","children","range","n","Object","toConsumableArray","Array","keys","Hiscore","_ref","name","score","time","react_default","a","createElement","className","Tile","_this$props","this","isRevealed","hasMine","nearby","flag","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","handleTouch","xray","theme","concat","onTouchEnd","onContextMenu","e","preventDefault","Tile_Over","Tile_Under","Component","Over","Tile_Flag","Under","_ref2","Tile_Mine","Tile_ColoredNumber","ColoredNumber","_ref3","Mine","src","logo","alt","Flag","TileGrid","renderTileAt","i","j","_this$props$gridState","_this","gridState","isHighlighted","isR","hasM","nB","components_Tile","mouseDown","mouseUp","mouseEnter","mouseLeave","_this2","length","map","key","GameInfo","mines","hidden","flags","role","aria-label","href","target","GameButtons","newGame","infoOn","xrayOn","toggleInfo","toggleXray","toggleTheme","onClick","GameInputs","nCols","nRows","chance","onColChange","onRowChange","onChanceChange","type","value","min","max","onChange","onKeyUp","step","Popup","text","xrayUsed","onSubmit","submitHiscore","autoFocus","placeholder","closePopup","getHiscoresQuery","gql","_templateObject","addHiscoreMutation","_templateObject2","HiscoreSubmitter","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","scoreSubmission","variables","objectSpread","refetchQueries","query","state","lastSubmission","setState","style","display","compose","graphql","HiscorePage","displayHiscores","data","loading","hiscores","hiscore","generic_Hiscore","assign","id","options","page","NEARBY_COORDS","Game","changedTouches","identifier","handleRightClick","gameStatus","buttons","highlightArea","xrayArea","ignoreNextClick","button","_this$state","includes","nearbyFlags","reveal","eachNearby","ix","jy","handleClick","_this$state2","_this$state3","totalFlags","_gridState$i$j","changeTile","flagChange","newGridState","clearInterval","timer","setInterval","tick","_this$state4","totalHidden","newTheme","v","parseInt","isNaN","parseFloat","_this$state5","hash","crypto","createHash","update","digest","speed","scoreGrid","anyUB","anyUnrevealedBlank","anyUN","anyUnrevealedNumbers","any","forEach","row","tile","_this$state6","Math","random","resetGrid","everyTile","toggle","_gridState$i$j2","gridReduce","countNearby","nearbyMines","sum","callback","c","validTile","reducer","change","slice","totalMines","_this$state7","toggleView","components_GameButtons","components_GameInputs","components_TileGrid","components_Popup","components_GameInfo","components_HiscoreSubmitter","components_HiscorePage","_this$state8","toString","_this$state9","HiscorePages","prevPage","nextPage","client","ApolloClient","uri","App","view","react_apollo_browser_umd","src_components_Game","components_HiscorePages","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f6e896d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.eed724ad.svg\";","import React from 'react';\r\n\r\nconst HiddenToggle = props => {\r\n  if (props.show) {\r\n      return props.children;\r\n  }return null;\r\n};\r\n\r\n// number range helper\r\nconst range = n => [...Array(n).keys()];\r\n\r\nconst Hiscore = ({ name, score, time }) =>\r\n  <li className=\"Hiscore\">\r\n    <span>{name}</span>\r\n    <span>{score} / {time}</span>\r\n  </li>\r\n\r\n\r\nexport { HiddenToggle, range, Hiscore };","import React, { Component } from 'react';\r\n\r\nimport logo from '../img/logo.svg';\r\n\r\nclass Tile extends Component {\r\n  render() {\r\n    const { isRevealed, hasMine, nearby, flag,\r\n      onMouseDown, onMouseUp, onMouseEnter, onMouseLeave, handleTouch,\r\n      xray, theme } = this.props;\r\n    \r\n    return (\r\n      <div className={`Tile-${theme}`}\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onTouchEnd={handleTouch}\r\n        onContextMenu={e => e.preventDefault()}\r\n      >\r\n        <Over isRevealed={isRevealed} flag={flag} xray={xray} theme={theme}>\r\n          <Under hasMine={hasMine} nearby={nearby} />\r\n        </Over>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// covers revealed tiles\r\nconst Over = ({ isRevealed, flag, children, xray, theme }) =>\r\n  isRevealed ? children :\r\n    <div className={`Cover-${theme}`}>\r\n      {flag ? <Flag /> : xray ? children : null}\r\n    </div>;\r\n  \r\n// whats underneath tile?\r\nconst Under = ({ hasMine, nearby }) =>\r\n  hasMine ? <Mine /> : <ColoredNumber n={nearby} />\r\n\r\n// minesweeper colors in the css!\r\nconst ColoredNumber = ({ n }) =>\r\n  <span className={`nearby${n}`}>\r\n    {n !== 0 ? n : null}\r\n  </span>;\r\n\r\nconst Mine = () => <img className=\"Mine\" src={logo} alt=\"X\" />;\r\n  \r\nconst Flag = () => <span className=\"Flag\">F</span>;\r\n\r\nexport default Tile;","import React, { Component } from 'react';\r\n\r\nimport Tile from './Tile';\r\n\r\nimport { range } from './generic';\r\n\r\nclass TileGrid extends Component {\r\n  \r\n  render() {\r\n    const { gridState } = this.props;\r\n    if (gridState === null) { return null; }\r\n    return range(gridState.length).map((i) =>\r\n      <div key={i} className=\"Game-grid-row\">\r\n        {range(gridState[i].length).map((j) =>\r\n          <this.renderTileAt key={`${i},${j}`} i={i} j={j} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderTileAt = ({ i, j }) => {\r\n    const { isRevealed, hasMine, nearby, flag,\r\n      isHighlighted, xray } = this.props.gridState[i][j];\r\n    // display highlighted tiles as blank\r\n    const isR = isHighlighted ? true : isRevealed,\r\n          hasM = isHighlighted ? false : hasMine,\r\n          nB = isRevealed ? nearby : isHighlighted ? 0 : nearby;\r\n    return <Tile\r\n      isRevealed={isR}\r\n      hasMine={hasM}\r\n      nearby={nB}\r\n      flag={flag}\r\n      xray={xray || this.props.xray}\r\n      theme={this.props.theme}\r\n      onMouseDown={e => this.props.mouseDown(e, i, j)}\r\n      onMouseUp={e => this.props.mouseUp(e, i, j)}\r\n      onMouseEnter={e => this.props.mouseEnter(e, i, j)}\r\n      onMouseLeave={e => this.props.mouseLeave(e, i, j)}\r\n      handleTouch={e => this.props.handleTouch(e, i, j)}\r\n    />;\r\n  }\r\n}\r\n\r\nexport default TileGrid;","import React from 'react';\r\n\r\n// mines left, etc.\r\nconst GameInfo = ({ mines, hidden, time, flags }) =>\r\n  <div className=\"Game-info\">\r\n    <p>\r\n      <span role=\"img\" aria-label=\"bomb\">💣</span> {mines - flags}\r\n      <span role=\"img\" aria-label=\"question\"> ❓</span> {hidden}\r\n      <span role=\"img\" aria-label=\"timer\"> ⏱</span> {time}\r\n    </p>\r\n    <p>\r\n      <span role=\"img\" aria-label=\"ok\">👌 </span>\r\n      Click around with right+left click for a safe start!\r\n    </p>\r\n    <p>\r\n      <span role=\"img\" aria-label=\"score\">💯 </span>\r\n      <a href=\"http://www.minesweeper.info/wiki/3BV\" target=\"blank\">\r\n        Difficulty = minimum # of left clicks to win\r\n      </a>\r\n    </p>\r\n    <p>\r\n      <span role=\"img\" aria-label=\"radioactive\">☢ </span>\r\n      Use middle click to xray (cheat) the area.\r\n    </p>\r\n  </div>;\r\n\r\nexport default GameInfo;","import React, { Component } from 'react';\r\n\r\nclass GameButtons extends Component {\r\n  \r\n  render() {\r\n    const { newGame, infoOn, xrayOn, theme,\r\n      toggleInfo, toggleXray, toggleTheme } = this.props;\r\n    return (\r\n      <div className=\"GameButtons\">\r\n        <button onClick={newGame}\r\n          className=\"Game-button\"\r\n        >New Game\r\n        </button>\r\n        <button onClick={toggleInfo}\r\n          className={`Game-button${infoOn ? ' toggle' : ''}`}\r\n        >Game Info\r\n        </button>\r\n        <button onClick={toggleXray}\r\n          className={`Game-button${xrayOn ? ' toggle' : ''}`}\r\n        >X-RAY\r\n        </button>\r\n        <button onClick={toggleTheme}\r\n          className={`Game-button${theme === 'light' ? ' toggle' : ''}`}\r\n        >Theme\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameButtons;","import React from 'react';\r\n\r\nconst GameInputs = ({ nCols, nRows, chance,\r\n  onColChange, onRowChange, onChanceChange,\r\n  newGame\r\n}) =>\r\n  <div>\r\n    <input className=\"Game-input\"\r\n      type=\"number\" value={nCols} min={1} max={32}\r\n      onChange={onColChange}\r\n      onKeyUp={newGame}/>\r\n    x<input className=\"Game-input\"\r\n      type=\"number\" value={nRows} min={1} max={32}\r\n      onChange={onRowChange}\r\n      onKeyUp={newGame}/>\r\n    x<input className=\"Game-input\"\r\n      type=\"number\" value={chance} min={0} max={1.0} step={0.01}\r\n      onChange={onChanceChange}\r\n      onKeyUp={newGame}/>\r\n  </div>\r\n\r\nexport default GameInputs;","import React from 'react';\r\n\r\nimport { HiddenToggle } from './generic';\r\n\r\n// popup message\r\nconst Popup = props =>\r\n  <HiddenToggle show={props.show}>\r\n    <div className=\"Popup\" onContextMenu={e => e.preventDefault()}>\r\n      <div className=\"Popup-inner\">\r\n        <p>{props.text}</p>\r\n        \r\n        {props.text === 'Winner!' ?\r\n          <div className=\"Popup-score\">\r\n            <p>\r\n              Difficulty: {props.score} | Time: {props.time}\r\n            </p>\r\n\r\n            {/* only record games > 5 seconds long & no cheaters! */\r\n            ( props.time < 5 || props.xrayUsed ) ? null\r\n            : <form onSubmit={e => props.submitHiscore(e)}>\r\n                <input autoFocus className=\"Popup-name\" type=\"text\" placeholder=\"Name\" />\r\n                <input className=\"Popup-submit\" type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n            }\r\n          </div>\r\n        : null}\r\n        \r\n        <button className=\"close\" onClick={props.closePopup}>Back</button>\r\n      </div>\r\n    </div>\r\n  </HiddenToggle>;\r\n\r\nexport default Popup;","import { gql } from 'apollo-boost';\r\n\r\nconst getHiscoresQuery = gql`\r\n  query($page: Int){\r\n    hiscores(page: $page){\r\n      id\r\n      name\r\n      score\r\n      time\r\n      speed\r\n    }\r\n  }\r\n`;\r\n\r\nconst addHiscoreMutation = gql`\r\n  mutation($name: String!, $score: Int!, $time: Int!, $speed: Float!){\r\n    addHiscore(name: $name, score: $score, time: $time, speed: $speed){\r\n      id\r\n      name\r\n      score\r\n      time\r\n      speed\r\n    }\r\n  }\r\n`;\r\n\r\nexport { getHiscoresQuery, addHiscoreMutation };","import React, {Component} from 'react';\r\nimport { graphql, compose } from 'react-apollo';\r\n\r\nimport { getHiscoresQuery, addHiscoreMutation } from '../queries';\r\n\r\nclass HiscoreSubmitter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastSubmission: null,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { scoreSubmission } = this.props;\r\n    const { lastSubmission } = this.state;\r\n    if (scoreSubmission !== lastSubmission) {\r\n      this.setState({ lastSubmission: scoreSubmission });\r\n      this.submitHiscore();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{display: 'none'}}>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  submitHiscore = () => {\r\n    const { scoreSubmission } = this.props;\r\n    if (scoreSubmission.name.length < 1) { return; }\r\n    this.props.addHiscoreMutation({\r\n      variables: { ...scoreSubmission },\r\n      refetchQueries: [{ query: getHiscoresQuery }],\r\n    })\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getHiscoresQuery, {name: 'getHiscoresQuery'}),\r\n  graphql(addHiscoreMutation, {name: 'addHiscoreMutation'}),\r\n)(HiscoreSubmitter);","import React, {Component} from 'react';\r\nimport { graphql } from 'react-apollo';\r\n\r\nimport { getHiscoresQuery } from '../queries';\r\n\r\nimport { Hiscore } from './generic';\r\n\r\nclass HiscorePage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Hiscores\">\r\n        <li className=\"Hiscore\">\r\n          <span className=\"HiscoreHeader\">Name</span>\r\n          <span className=\"HiscoreHeader\">EBV / s</span>\r\n        </li>\r\n        {this.displayHiscores()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  displayHiscores = () => {\r\n    const { data } = this.props;\r\n    if (data.loading) {\r\n      return <i className=\"fa fa-2x fa-circle-o-notch fa-spin\"></i>;\r\n    }\r\n    else {\r\n      if (!data.hiscores) {\r\n        return <span>Couldn't connect to DB</span>\r\n      }\r\n      return data.hiscores.map(hiscore => {\r\n        return <Hiscore key={hiscore.id} {...hiscore} />\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default graphql(getHiscoresQuery, {\r\n  options: props => ({\r\n    variables: {\r\n      page: props.page,\r\n    }\r\n  })\r\n})(HiscorePage);","import React, {Component} from 'react';\r\nimport crypto from 'crypto';\r\n\r\nimport './Game.scss';\r\n\r\nimport { range } from './generic';\r\nimport TileGrid from './TileGrid';\r\nimport GameInfo from './GameInfo';\r\nimport GameButtons from './GameButtons';\r\nimport GameInputs from './GameInputs';\r\nimport Popup from './Popup';\r\nimport HiscoreSubmitter from './HiscoreSubmitter';\r\nimport HiscorePage from './HiscorePage';\r\n\r\n// adjacent tiles\r\nconst NEARBY_COORDS = [\r\n  [-1, -1], [0, -1], [1, -1],\r\n  [-1, 0], /*[0, 0],*/ [1,0],\r\n  [-1, 1], [0, 1], [1,1]\r\n];\r\n  \r\n\r\n// TODO: refactor\r\n// TODO: better performance? bigger grids?\r\n// TODO: adjust tile size?\r\nclass Game extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // grid\r\n      nRows: 10,\r\n      nCols: 10,\r\n      chance: 0.1,\r\n      gridState: null,\r\n      // info\r\n      totalMines: 0,\r\n      totalFlags: 0,\r\n      totalHidden: 100,\r\n      gameStatus: 'Loading',\r\n      time: 0,\r\n      score: 0,\r\n      // menu\r\n      theme: 'dark',\r\n      xrayOn: false,\r\n      infoOn: false,\r\n      // internal\r\n      ignoreNextClick: false,\r\n      scoreSubmission: null,\r\n      xrayUsed: false,\r\n      hash: null,\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    const { gameStatus, gridState, nRows, nCols, chance,\r\n      totalMines, totalFlags, totalHidden,\r\n      xrayOn, infoOn, theme, time, score, scoreSubmission,\r\n      xrayUsed,\r\n    } = this.state;\r\n    const { toggleView } = this.props;\r\n      \r\n    return (\r\n      <div className=\"Game\">\r\n        <div className=\"Game-menu\">\r\n          <GameButtons\r\n            newGame={this.newGame}\r\n            infoOn={infoOn}\r\n            xrayOn={xrayOn}\r\n            theme={theme}\r\n            toggleInfo={this.toggleInfo}\r\n            toggleXray={this.toggleXray}\r\n            toggleTheme={this.toggleTheme}\r\n          />\r\n          \r\n          <GameInputs\r\n            nCols={nCols}\r\n            nRows={nRows}\r\n            chance={chance}\r\n            onColChange={this.onColChange}\r\n            onRowChange={this.onRowChange}\r\n            onChanceChange={this.onChanceChange}\r\n            newGame={this.newGame}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"Game-grid\">\r\n          <TileGrid\r\n            gridState={gridState}\r\n            xray={xrayOn}\r\n            theme={theme}\r\n            mouseDown={this.mouseDown}\r\n            mouseUp={this.mouseUp}\r\n            mouseEnter={this.mouseEnter}\r\n            mouseLeave={this.mouseLeave}\r\n            handleTouch={this.handleTouch}\r\n          />\r\n          <Popup\r\n            text={gameStatus}\r\n            xrayUsed={xrayUsed}\r\n            score={score}\r\n            time={time}\r\n            submitHiscore={this.submitHiscore}\r\n            closePopup={this.newGame}\r\n            show={gameStatus !== 'Playing'}\r\n          />\r\n        </div>\r\n        \r\n        {infoOn ?\r\n        <GameInfo\r\n          mines={totalMines} flags={totalFlags} hidden={totalHidden} time={time}\r\n        /> : null}\r\n\r\n        <HiscoreSubmitter scoreSubmission={scoreSubmission} />\r\n        <h2>Top 10:</h2>\r\n        <HiscorePage page={0} />\r\n        \r\n        <footer>\r\n          <a href=\"https://github.com/jistjoalal/DarkSweeper\">\r\n            <i className=\"fa fa-3x fa-github\"></i>\r\n          </a>\r\n          <button onClick={toggleView} className={`App-button`}>\r\n            <i className=\"fa fa-3x fa-trophy\"></i>\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.newGame();\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    const { totalHidden, totalMines,\r\n      nRows, nCols, gameStatus, gridState } = this.state;\r\n    \r\n    // new game = calculate nearby numbers, total mines, and reset game\r\n    if (gameStatus === 'New Game') {\r\n      this.countNearby();\r\n      this.setState({\r\n        totalMines: this.gridReduce((i, j) =>\r\n          gridState[i][j].hasMine ? 1 : 0),\r\n        totalFlags: 0,\r\n        totalHidden: nRows * nCols,\r\n        time: 0,\r\n        score: 0,\r\n        gameStatus: 'Playing'\r\n      });\r\n    }\r\n    \r\n    // win condition\r\n    if (totalHidden === totalMines\r\n      // avoid auto-wins\r\n      && totalHidden !== nRows * nCols) \r\n    {\r\n      // total mines is set to string to prevent infinite loop\r\n      // and still appear the same\r\n      this.setState({ gameStatus: 'Scoring',\r\n      totalMines: totalMines.toString() });\r\n      // reset grid for scoring\r\n      clearInterval(this.timer);\r\n      this.resetGrid();\r\n    }\r\n    \r\n    if (gameStatus === 'Scoring') {\r\n      this.setState({\r\n        gameStatus: 'Hashing',\r\n        score: this.scoreGrid(),\r\n      });\r\n    }\r\n    \r\n    if (gameStatus === 'Hashing') {\r\n      const { score, time } = this.state;\r\n      this.setState({\r\n        gameStatus: 'Winner!',\r\n        hash: crypto.createHash('sha1').update(`${score} ${time}`).digest('base64'),\r\n      });\r\n    }\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n  \r\n  /*\r\n    Mouse / Touch\r\n  */\r\n\r\n  // 2nd touch point sets flag\r\n  handleTouch = (e, i, j) => {\r\n    if (e.changedTouches[0].identifier === 1) {\r\n      this.handleRightClick(i, j);\r\n    }\r\n  }\r\n  \r\n  mouseEnter = (e, i, j) => {\r\n    const { gameStatus } = this.state;\r\n    if (gameStatus !== 'Playing') { return; }\r\n    // \"both\" down\r\n    if (e.buttons === 3) { this.highlightArea(i, j, true); }\r\n    // middle down\r\n    if (e.buttons === 4) { this.xrayArea(i, j, true); }\r\n  }\r\n  \r\n  mouseLeave = (e, i, j) => {\r\n    // \"both\" down\r\n    if (e.buttons === 3) { this.highlightArea(i, j, false); }\r\n    // middle down\r\n    if (e.buttons === 4) { this.xrayArea(i, j, false); }\r\n  }\r\n  \r\n  mouseDown = (e, i, j) => {\r\n    e.preventDefault(); // prevents click-drag to highlight text\r\n    const { gameStatus } = this.state;\r\n    if (gameStatus !== 'Playing') { return; }\r\n    // \"both\" down\r\n    if (e.buttons === 3) {\r\n      this.setState({ ignoreNextClick: true });\r\n      this.highlightArea(i, j, true);\r\n    }\r\n    // middle down\r\n    if (e.button === 1) { this.xrayArea(i, j, true); }\r\n  }\r\n  \r\n  mouseUp = (e, i, j) => {\r\n    const { ignoreNextClick, gridState } = this.state;\r\n\r\n    // \"both\" up\r\n    if ([1,2].includes(e.buttons)) {\r\n      this.setState({ ignoreNextClick: true });\r\n      this.highlightArea(i, j, false);\r\n      // if nearby mines == nearby flags, reveal this + nearby tiles\r\n      // - !hasMine makes simultaneous click safe!\r\n      if (gridState[i][j].nearby === this.nearbyFlags(i, j)\r\n        && !gridState[i][j].hasMine)\r\n      {\r\n        this.reveal(i, j);\r\n        this.eachNearby(i, j, (ix, jy) => {\r\n          this.reveal(ix, jy);\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    // middle up\r\n    if (e.button === 1) { this.xrayArea(i, j, false); }\r\n    // right up\r\n    else if (e.button === 2 && !ignoreNextClick) {\r\n      this.handleRightClick(i, j);\r\n    }\r\n    // left up\r\n    else if (e.button === 0 && !ignoreNextClick) {\r\n      this.handleClick(i, j);\r\n    }\r\n    this.setState({ ignoreNextClick: false });\r\n  }\r\n \r\n  // left click to reveal tile or lose!\r\n  handleClick = (i, j) => {\r\n    const { gridState, gameStatus } = this.state;\r\n    const { flag } = gridState[i][j];\r\n    \r\n    // ignore clicks if game is over or tile is flagged\r\n    if (gameStatus !== 'Playing' || flag) { return; }\r\n    \r\n    // reveal clicked tile\r\n    this.reveal(i, j);\r\n  }\r\n  \r\n  // right click to set flag\r\n  handleRightClick = (i, j) => {\r\n    const { gridState, gameStatus, totalFlags } = this.state;\r\n    const { isRevealed, flag } = gridState[i][j];\r\n    // ignore clicks if game is over or tile revealed\r\n    if (gameStatus !== 'Playing' || isRevealed) { return; }\r\n    \r\n    // toggle flag\r\n    this.changeTile(i, j, { flag: !flag });\r\n    \r\n    // increment total flags\r\n    const flagChange = !flag ? 1 : -1;\r\n    this.setState({ totalFlags: totalFlags + flagChange });\r\n  }\r\n  \r\n  /*\r\n    Game Config\r\n */\r\n  \r\n  newGame = () => {\r\n    this.setState({\r\n      gridState: this.newGridState(), \r\n      gameStatus: 'New Game',\r\n      xrayUsed: false\r\n    });\r\n    clearInterval(this.timer);\r\n    this.timer = setInterval(() => this.tick(), 1000);\r\n  }\r\n  \r\n  tick = () => {\r\n    const { totalHidden, gameStatus, nRows, nCols } = this.state;\r\n    if (totalHidden !== nRows * nCols && gameStatus === 'Playing') {\r\n      this.setState({time: this.state.time + 1});\r\n    }\r\n  }\r\n  \r\n  toggleTheme = () => {\r\n    const { theme } = this.state;\r\n    const newTheme = theme === 'dark' ? 'light' : 'dark';\r\n    this.setState({ theme: newTheme });\r\n  }\r\n  \r\n  toggleInfo = () => {\r\n    this.setState({ infoOn: !this.state.infoOn });\r\n  }\r\n  \r\n  toggleXray = () => {\r\n    this.setState({\r\n      xrayOn: !this.state.xrayOn,\r\n      xrayUsed: true,\r\n    });\r\n  }\r\n\r\n  onColChange = e => {\r\n    const v = parseInt(e.target.value)\r\n    if (v > 0 && v <= 32) {\r\n      this.setState({ nCols: parseInt(e.target.value)})\r\n    }\r\n  }\r\n  onRowChange = e => {\r\n    const v = parseInt(e.target.value)\r\n    if (v > 0 && v <= 32) {\r\n      this.setState({ nRows: parseInt(e.target.value)})\r\n    }\r\n  }\r\n  onChanceChange = e => {\r\n    if (!isNaN(parseFloat(e.target.value))) {\r\n      this.setState({ chance: parseFloat(e.target.value)})\r\n    }\r\n  }\r\n  \r\n  /*\r\n    Scoring\r\n  */\r\n  \r\n  submitHiscore = e => {\r\n    const name = e.target[0].value;\r\n    const { score, time, hash } = this.state;\r\n    const tHash = crypto.createHash('sha1').update(`${score} ${time}`).digest('base64')\r\n    if (tHash === hash) {\r\n      this.setState({scoreSubmission: {\r\n        name, score, time,\r\n        speed: (score / time)\r\n      }});\r\n      this.newGame();\r\n    }\r\n    else {\r\n      this.setState({\r\n        gameStatus: '🚨 Hacker 🚨',\r\n      })\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  \r\n  //hash: `${score} ${time}`\r\n  \r\n  scoreGrid = () => {\r\n    const anyUB = this.anyUnrevealedBlank();\r\n    const anyUN = this.anyUnrevealedNumbers();\r\n    // if any unrevealed blank tile, reveal\r\n    if (anyUB) {\r\n      this.reveal(anyUB.i, anyUB.j);\r\n      return 1 + this.scoreGrid();\r\n    }\r\n    // else if any unrevealed numbers, reveal\r\n    else if (anyUN) {\r\n      this.reveal(anyUN.i, anyUN.j);\r\n      return 1 + this.scoreGrid();\r\n    }\r\n    // else save score\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  anyUnrevealedNumbers = () => {\r\n    const { gridState } = this.state;\r\n    let any = false;\r\n    gridState.forEach((row, i) => {\r\n      row.forEach((tile, j) => {\r\n        if (!tile.isRevealed && !tile.hasMine) {\r\n          any = {i, j};\r\n        }\r\n      })\r\n    })\r\n    return any;\r\n  }\r\n  \r\n  anyUnrevealedBlank = () => {\r\n    const { gridState } = this.state;\r\n    let any = false;\r\n    gridState.forEach((row, i) => {\r\n      row.forEach((tile, j) => {\r\n        if (tile.nearby === 0 && !tile.isRevealed && !tile.hasMine) {\r\n          any = {i, j};\r\n        }\r\n      })\r\n    })\r\n    return any;\r\n  }\r\n  \r\n  /*\r\n    Game\r\n  */\r\n  \r\n  // Grid State = 2d array of tile states\r\n  // - nearby is the # of nearby mines\r\n  newGridState = () => {\r\n    const { nRows, nCols, chance } = this.state;\r\n    return range(nRows).map(i => range(nCols).map(j => {\r\n      return {\r\n        isRevealed: false,\r\n        hasMine: Math.random() < chance,\r\n        nearby: 0,\r\n        flag: false,\r\n        isHighlighted: false,\r\n        xray: false\r\n      };\r\n    }));\r\n  }\r\n  \r\n  resetGrid = () => {\r\n    this.everyTile((i, j) => \r\n      this.changeTile(i, j, { isRevealed: false, flag: false }))\r\n  }\r\n  \r\n  xrayArea = (i, j, toggle) => {\r\n    this.changeTile(i, j, { xray: toggle });\r\n    this.eachNearby(i, j, (ix, jy) => {\r\n      this.changeTile(ix, jy, { xray: toggle });\r\n    });\r\n    this.setState({ xrayUsed: true });\r\n  }\r\n  \r\n  highlightArea = (i, j, toggle) => {\r\n    const { gridState } = this.state;\r\n    // highlight self + nearby unflagged tiles\r\n    this.changeTile(i, j, { isHighlighted: toggle })\r\n    this.eachNearby(i, j, (ix, jy) => {\r\n      if (!gridState[ix][jy].flag) {\r\n        this.changeTile(ix, jy, { isHighlighted: toggle });\r\n      }\r\n    })\r\n  }\r\n  \r\n  // revealed tiles that have 0 nearby mines reveal adjacent tiles\r\n  reveal = (i, j) => {\r\n    const { gridState } = this.state;\r\n    const { nearby, hasMine, flag } = gridState[i][j];\r\n    \r\n    // recursion break\r\n    if (gridState[i][j].isRevealed || flag) { return 0; }\r\n\r\n    // check mine\r\n    if (hasMine) {\r\n      this.changeTile(i, j, {isRevealed: true});\r\n      return this.setState({ gameStatus: 'Game Over'});\r\n    }\r\n    \r\n    // reveal tile\r\n    this.changeTile(i, j, {isRevealed: true});\r\n    \r\n    // recount of totalHidden\r\n    this.setState({\r\n      totalHidden: this.gridReduce((i, j) =>\r\n        gridState[i][j].isRevealed ? 0 : 1\r\n      ),\r\n    });\r\n    \r\n    // recursively clear adjacent tiles if 0 nearby\r\n    if (nearby === 0 && !hasMine) {\r\n      this.eachNearby(i, j, (ix, jy) => {\r\n        this.reveal(ix, jy);\r\n      });\r\n    }\r\n  }\r\n  \r\n  // calculates nearby mines for every tile\r\n  countNearby = () => {\r\n    this.everyTile((i, j) =>\r\n      this.changeTile(i, j, { nearby: this.nearbyMines(i, j) }));\r\n  }\r\n  \r\n  // returns # of mines nearby tile @ (i, j)\r\n  nearbyMines = (i, j) => {\r\n    const { gridState } = this.state;\r\n    let sum = 0;\r\n    this.eachNearby(i, j, (ix, jy) =>\r\n      sum += gridState[ix][jy].hasMine ? 1 : 0);\r\n    return sum;\r\n  }\r\n  \r\n  // returns # of flags nearby tile @ (i, j)\r\n  nearbyFlags = (i, j) => {\r\n    const { gridState } = this.state;\r\n    let sum = 0;\r\n    this.eachNearby(i, j, (ix, jy) =>\r\n      sum += gridState[ix][jy].flag ? 1 : 0);\r\n    return sum;\r\n  }\r\n  \r\n  // runs callback on each nearby tile that exists\r\n  eachNearby = (i, j, callback) => {\r\n    NEARBY_COORDS.forEach(c => {\r\n      const ix = i + c[0],\r\n            jy = j + c[1];\r\n      if (this.validTile(ix, jy)) {\r\n        callback(ix, jy);\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 2d array summing thing\r\n  gridReduce = reducer => {\r\n    let sum = 0;\r\n    this.everyTile((i, j) =>\r\n      sum += reducer(i, j));\r\n    return sum;\r\n  }\r\n  \r\n  // assign change to tile @ (i, j)\r\n  changeTile = (i, j, change) => {\r\n    const gridState = this.state.gridState.slice();\r\n    Object.assign(gridState[i][j], change);\r\n    this.setState({ gridState });\r\n  }\r\n  \r\n  // callback to 2d array\r\n  everyTile = callback =>\r\n    this.state.gridState.map((row, i) => row.map((tile, j) => callback(i, j)))\r\n  \r\n  // boolean if tile exists at i,j coords\r\n  validTile = (i, j) =>\r\n    typeof this.state.gridState[i] === 'undefined' ? false :\r\n      typeof this.state.gridState[i][j] !== 'undefined'\r\n}\r\n\r\nexport default Game;","import React, {Component} from 'react';\r\nimport HiscorePage from './HiscorePage';\r\n\r\nimport '../index.scss';\r\n\r\nclass HiscorePages extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      page: 0,\r\n    }\r\n  }\r\n  render() {\r\n    const { toggleView } = this.props;\r\n    const { page } = this.state;\r\n    return (\r\n      <div className=\"HiscorePage\">\r\n        <h1>Hiscores</h1>\r\n\r\n        <HiscorePage page={page} />\r\n\r\n        <footer>\r\n          <button onClick={this.prevPage} className={`App-button`}>\r\n            <i className=\"fa fa-3x fa-arrow-left\"></i>\r\n          </button>\r\n          <button onClick={toggleView} className={`App-button`}>\r\n            <i className=\"fa fa-3x fa-undo\"></i>\r\n          </button>\r\n          <button onClick={this.nextPage} className={`App-button`}>\r\n            <i className=\"fa fa-3x fa-arrow-right\"></i>\r\n          </button>\r\n        </footer>\r\n     </div>\r\n    )\r\n  }\r\n\r\n  prevPage = () => {\r\n    this.setState(state => {\r\n      if (state.page > 0) {\r\n        return { page: state.page - 1 };\r\n      }\r\n    })\r\n  }\r\n\r\n  nextPage = () => {\r\n    this.setState(state => ({ page: state.page + 1 }))\r\n  }\r\n}\r\n\r\nexport default HiscorePages;","import React, {Component} from 'react';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\n\r\nimport Game from './components/Game';\r\nimport HiscorePages from './components/HiscorePages';\r\n\r\nconst client = new ApolloClient({\r\n  uri: '/graphql'\r\n})\r\n\r\nclass App extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      view: 'Game',\r\n    };\r\n  }\r\n\r\n  toggleView = () => {\r\n    const { view } = this.state;\r\n    this.setState({\r\n      view: view === 'Game' ? 'Hiscores' : 'Game',\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { view } = this.state;\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        {view !== 'Hiscores' ?\r\n          <Game toggleView={this.toggleView} />\r\n        : <HiscorePages toggleView={this.toggleView} />\r\n        }\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nif (module.hot) {\r\n    module.hot.accept();\r\n}\r\n"],"sourceRoot":""}