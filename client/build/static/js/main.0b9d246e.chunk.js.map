{"version":3,"sources":["img/logo.svg","components/generic.js","components/Tile.js","components/TileGrid.js","components/GameInfo.js","components/GameButtons.js","components/GameInputs.js","components/Popup.js","queries.js","components/HiscoreTop10.js","components/TitleBar.js","components/Game.js","components/HiscorePage.js","components/HiscorePages.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","HiddenToggle","props","show","children","range","n","Object","toConsumableArray","Array","keys","Hiscore","_ref","name","score","time","react_default","a","createElement","className","Tile","_this$props","this","isRevealed","hasMine","nearby","flag","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","handleTouch","xray","theme","concat","onTouchEnd","onContextMenu","e","preventDefault","Tile_Over","Tile_Under","Component","Over","Tile_Flag","Under","_ref2","Tile_Mine","Tile_ColoredNumber","ColoredNumber","_ref3","Mine","src","logo","alt","Flag","TileGrid","renderTileAt","i","j","_this$props$gridState","_this","gridState","isHighlighted","isR","hasM","nB","components_Tile","mouseDown","mouseUp","mouseEnter","mouseLeave","_this2","length","map","key","GameInfo","mines","hidden","flags","role","aria-label","href","target","GameButtons","newGame","infoOn","xrayOn","toggleInfo","toggleXray","toggleTheme","onClick","GameInputs","nCols","nRows","chance","onColChange","onRowChange","onChanceChange","type","value","min","max","onChange","onKeyUp","step","Popup","text","xrayUsed","onSubmit","submitHiscore","autoFocus","placeholder","closePopup","getHiscoresQuery","gql","_templateObject","addHiscoreMutation","_templateObject2","HiscoreTop10","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayHiscores","data","loading","hiscores","hiscore","generic_Hiscore","assign","id","scoreSubmission","variables","objectSpread","refetchQueries","query","state","lastSubmission","setState","compose","graphql","options","page","TitleBar","title","NEARBY_COORDS","Game","changedTouches","identifier","handleRightClick","gameStatus","buttons","highlightArea","xrayArea","ignoreNextClick","button","_this$state","includes","nearbyFlags","reveal","eachNearby","ix","jy","handleClick","_this$state2","_this$state3","totalFlags","_gridState$i$j","changeTile","flagChange","newGridState","clearInterval","timer","setInterval","tick","_this$state4","totalHidden","newTheme","v","parseInt","isNaN","parseFloat","_this$state5","hash","crypto","createHash","update","digest","speed","scoreGrid","anyUB","anyUnrevealedBlank","anyUN","anyUnrevealedNumbers","any","forEach","row","tile","_this$state6","Math","random","resetGrid","everyTile","toggle","_gridState$i$j2","gridReduce","countNearby","nearbyMines","sum","callback","c","validTile","reducer","change","slice","totalMines","_this$state7","TitleBar_TitleBar","components_GameButtons","components_GameInputs","components_TileGrid","components_Popup","components_GameInfo","components_HiscoreTop10","Link","to","_this$state8","toString","_this$state9","HiscorePage","HiscorePages","prevPage","nextPage","components_HiscorePage","client","ApolloClient","uri","App","react_apollo_browser_umd","BrowserRouter","Switch","Route","path","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0b9d246e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.932fdead.svg\";","import React from 'react';\n\nconst HiddenToggle = props => {\n  if (props.show) {\n      return props.children;\n  }return null;\n};\n\n// number range helper\nconst range = n => [...Array(n).keys()];\n\nconst Hiscore = ({ name, score, time }) =>\n  <li className=\"Hiscore\">\n    <span>{name}</span>\n    <span>{score} / {time}</span>\n  </li>\n\n\nexport { HiddenToggle, range, Hiscore };","import React, { Component } from 'react';\n\nimport logo from '../img/logo.svg';\n\nclass Tile extends Component {\n  render() {\n    const { isRevealed, hasMine, nearby, flag,\n      onMouseDown, onMouseUp, onMouseEnter, onMouseLeave, handleTouch,\n      xray, theme } = this.props;\n    \n    return (\n      <div className={`Tile-${theme}`}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onTouchEnd={handleTouch}\n        onContextMenu={e => e.preventDefault()}\n      >\n        <Over isRevealed={isRevealed} flag={flag} xray={xray} theme={theme}>\n          <Under hasMine={hasMine} nearby={nearby} />\n        </Over>\n      </div>\n    );\n  }\n}\n\n// covers revealed tiles\nconst Over = ({ isRevealed, flag, children, xray, theme }) =>\n  isRevealed ? children :\n    <div className={`Cover-${theme}`}>\n      {flag ? <Flag /> : xray ? children : null}\n    </div>;\n  \n// whats underneath tile?\nconst Under = ({ hasMine, nearby }) =>\n  hasMine ? <Mine /> : <ColoredNumber n={nearby} />\n\n// minesweeper colors in the css!\nconst ColoredNumber = ({ n }) =>\n  <span className={`nearby${n}`}>\n    {n !== 0 ? n : null}\n  </span>;\n\nconst Mine = () => <img className=\"Mine\" src={logo} alt=\"X\" />;\n  \nconst Flag = () => <span className=\"Flag\">F</span>;\n\nexport default Tile;","import React, { Component } from 'react';\n\nimport Tile from './Tile';\n\nimport { range } from './generic';\n\nclass TileGrid extends Component {\n  \n  render() {\n    const { gridState } = this.props;\n    if (gridState === null) { return null; }\n    return range(gridState.length).map((i) =>\n      <div key={i} className=\"Game-grid-row\">\n        {range(gridState[i].length).map((j) =>\n          <this.renderTileAt key={`${i},${j}`} i={i} j={j} />\n        )}\n      </div>\n    );\n  }\n  \n  renderTileAt = ({ i, j }) => {\n    const { isRevealed, hasMine, nearby, flag,\n      isHighlighted, xray } = this.props.gridState[i][j];\n    // display highlighted tiles as blank\n    const isR = isHighlighted ? true : isRevealed,\n          hasM = isHighlighted ? false : hasMine,\n          nB = isRevealed ? nearby : isHighlighted ? 0 : nearby;\n    return <Tile\n      isRevealed={isR}\n      hasMine={hasM}\n      nearby={nB}\n      flag={flag}\n      xray={xray || this.props.xray}\n      theme={this.props.theme}\n      onMouseDown={e => this.props.mouseDown(e, i, j)}\n      onMouseUp={e => this.props.mouseUp(e, i, j)}\n      onMouseEnter={e => this.props.mouseEnter(e, i, j)}\n      onMouseLeave={e => this.props.mouseLeave(e, i, j)}\n      handleTouch={e => this.props.handleTouch(e, i, j)}\n    />;\n  }\n}\n\nexport default TileGrid;","import React from 'react';\n\n// mines left, etc.\nconst GameInfo = ({ mines, hidden, time, flags }) =>\n  <div className=\"Game-info\">\n    <p>\n      <span role=\"img\" aria-label=\"bomb\">💣</span> {mines - flags}\n      <span role=\"img\" aria-label=\"question\"> ❓</span> {hidden}\n      <span role=\"img\" aria-label=\"timer\"> ⏱</span> {time}\n    </p>\n    <p>\n      <span role=\"img\" aria-label=\"ok\">👌 </span>\n      Click around with right+left click for a safe start!\n    </p>\n    <p>\n      <span role=\"img\" aria-label=\"score\">💯 </span>\n      <a href=\"http://www.minesweeper.info/wiki/3BV\" target=\"blank\">\n        Difficulty = minimum # of left clicks to win\n      </a>\n    </p>\n    <p>\n      <span role=\"img\" aria-label=\"radioactive\">☢ </span>\n      Use middle click to xray (cheat) the area.\n    </p>\n  </div>;\n\nexport default GameInfo;","import React, { Component } from 'react';\n\nclass GameButtons extends Component {\n  \n  render() {\n    const { newGame, infoOn, xrayOn, theme,\n      toggleInfo, toggleXray, toggleTheme } = this.props;\n    return (\n      <div className=\"GameButtons\">\n        <button onClick={newGame}\n          className=\"Game-button\"\n        >New Game\n        </button>\n        <button onClick={toggleInfo}\n          className={`Game-button${infoOn ? ' toggle' : ''}`}\n        >Game Info\n        </button>\n        <button onClick={toggleXray}\n          className={`Game-button${xrayOn ? ' toggle' : ''}`}\n        >X-RAY\n        </button>\n        <button onClick={toggleTheme}\n          className={`Game-button${theme === 'light' ? ' toggle' : ''}`}\n        >Theme\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default GameButtons;","import React from 'react';\n\nconst GameInputs = ({ nCols, nRows, chance,\n  onColChange, onRowChange, onChanceChange,\n  newGame\n}) =>\n  <div>\n    <input className=\"Game-input\"\n      type=\"number\" value={nCols} min={1} max={32}\n      onChange={onColChange}\n      onKeyUp={newGame}/>\n    x<input className=\"Game-input\"\n      type=\"number\" value={nRows} min={1} max={32}\n      onChange={onRowChange}\n      onKeyUp={newGame}/>\n    x<input className=\"Game-input\"\n      type=\"number\" value={chance} min={0} max={1.0} step={0.01}\n      onChange={onChanceChange}\n      onKeyUp={newGame}/>\n  </div>\n\nexport default GameInputs;","import React from 'react';\n\nimport { HiddenToggle } from './generic';\n\n// popup message\nconst Popup = props =>\n  <HiddenToggle show={props.show}>\n    <div className=\"Popup\" onContextMenu={e => e.preventDefault()}>\n      <div className=\"Popup-inner\">\n        <p>{props.text}</p>\n        \n        {props.text === 'Winner!' ?\n          <div className=\"Popup-score\">\n            <p>\n              Difficulty: {props.score} | Time: {props.time}\n            </p>\n\n            {/* only record games > 5 seconds long & no cheaters! */\n            ( props.time < 5 || props.xrayUsed ) ? null\n            : <form onSubmit={e => props.submitHiscore(e)}>\n                <input autoFocus className=\"Popup-name\" type=\"text\" placeholder=\"Name\" />\n                <input className=\"Popup-submit\" type=\"submit\" value=\"Submit\" />\n              </form>\n            }\n          </div>\n        : null}\n        \n        <button className=\"close\" onClick={props.closePopup}>Back</button>\n      </div>\n    </div>\n  </HiddenToggle>;\n\nexport default Popup;","import { gql } from 'apollo-boost';\n\nconst getHiscoresQuery = gql`\n  query($page: Int){\n    hiscores(page: $page){\n      id\n      name\n      score\n      time\n      speed\n    }\n  }\n`;\n\nconst addHiscoreMutation = gql`\n  mutation($name: String!, $score: Int!, $time: Int!, $speed: Float!){\n    addHiscore(name: $name, score: $score, time: $time, speed: $speed){\n      id\n      name\n      score\n      time\n      speed\n    }\n  }\n`;\n\nexport { getHiscoresQuery, addHiscoreMutation };","import React, {Component} from 'react';\nimport { graphql, compose } from 'react-apollo';\n\nimport { getHiscoresQuery, addHiscoreMutation } from '../queries';\nimport { Hiscore } from './generic';\n\nclass HiscoreTop10 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastSubmission: null,\n    }\n  }\n\n  componentDidUpdate() {\n    const { scoreSubmission } = this.props;\n    const { lastSubmission } = this.state;\n    if (scoreSubmission !== lastSubmission) {\n      this.setState({ lastSubmission: scoreSubmission });\n      this.submitHiscore();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Top 10:</h2>\n        <div className=\"Hiscores\">\n          <li className=\"Hiscore\">\n            <span className=\"HiscoreHeader\">Name</span>\n            <span className=\"HiscoreHeader\">EBV / s</span>\n          </li>\n          {this.displayHiscores()}\n        </div>\n      </div>\n    )\n  }\n\n  displayHiscores = () => {\n    const data = this.props.getHiscoresQuery;\n    if (data.loading) {\n      return <i className=\"fa fa-2x fa-circle-o-notch fa-spin\"></i>;\n    }\n    else {\n      if (!data.hiscores) {\n        return <span>Couldn't connect to DB</span>\n      }\n      return data.hiscores.map(hiscore => {\n        return <Hiscore key={hiscore.id} {...hiscore} />\n      })\n    }\n  }\n\n  submitHiscore = () => {\n    const { scoreSubmission } = this.props;\n    if (scoreSubmission.name.length < 1) { return; }\n    this.props.addHiscoreMutation({\n      variables: { ...scoreSubmission },\n      refetchQueries: [{ query: getHiscoresQuery }],\n    })\n  }\n}\n\nexport default compose(\n  graphql(getHiscoresQuery, {\n    options: props => ({\n      variables: {\n        page: props.page,\n      }\n    }),\n    name: 'getHiscoresQuery'\n  }),\n  graphql(addHiscoreMutation, {\n    name: 'addHiscoreMutation'\n  }),\n)(HiscoreTop10);","import React, { Component } from 'react';\n\nexport default class TitleBar extends Component {\n  render() {\n    return (\n      <div className=\"TitleBar\">\n        <div className=\"wrapper\">\n          <h1>{this.props.title}</h1>\n        </div> \n      </div>\n    );\n  }\n}","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport crypto from 'crypto';\n\nimport './Game.scss';\n\nimport { range } from './generic';\nimport TileGrid from './TileGrid';\nimport GameInfo from './GameInfo';\nimport GameButtons from './GameButtons';\nimport GameInputs from './GameInputs';\nimport Popup from './Popup';\nimport HiscoreTop10 from './HiscoreTop10';\nimport TitleBar from './TitleBar';\n\n// adjacent tiles\nconst NEARBY_COORDS = [\n  [-1, -1], [0, -1], [1, -1],\n  [-1, 0], /*[0, 0],*/ [1,0],\n  [-1, 1], [0, 1], [1,1]\n];\n  \n\n// TODO: refactor\n// TODO: better performance? bigger grids?\n// TODO: adjust tile size?\nclass Game extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      // grid\n      nRows: 10,\n      nCols: 10,\n      chance: 0.1,\n      gridState: null,\n      // info\n      totalMines: 0,\n      totalFlags: 0,\n      totalHidden: 100,\n      gameStatus: 'Loading',\n      time: 0,\n      score: 0,\n      // menu\n      theme: 'dark',\n      xrayOn: false,\n      infoOn: false,\n      // internal\n      ignoreNextClick: false,\n      scoreSubmission: null,\n      xrayUsed: false,\n      hash: null,\n    };\n  }\n  \n  render() {\n    const { gameStatus, gridState, nRows, nCols, chance,\n      totalMines, totalFlags, totalHidden,\n      xrayOn, infoOn, theme, time, score, scoreSubmission,\n      xrayUsed,\n    } = this.state;\n      \n    return (\n      <div className=\"Game\">\n        <TitleBar title=\"DarkSweeper\" />\n        <div className=\"Game-menu\">\n          <GameButtons\n            newGame={this.newGame}\n            infoOn={infoOn}\n            xrayOn={xrayOn}\n            theme={theme}\n            toggleInfo={this.toggleInfo}\n            toggleXray={this.toggleXray}\n            toggleTheme={this.toggleTheme}\n          />\n          \n          <GameInputs\n            nCols={nCols}\n            nRows={nRows}\n            chance={chance}\n            onColChange={this.onColChange}\n            onRowChange={this.onRowChange}\n            onChanceChange={this.onChanceChange}\n            newGame={this.newGame}\n          />\n        </div>\n        \n        <div className=\"Game-grid\">\n          <TileGrid\n            gridState={gridState}\n            xray={xrayOn}\n            theme={theme}\n            mouseDown={this.mouseDown}\n            mouseUp={this.mouseUp}\n            mouseEnter={this.mouseEnter}\n            mouseLeave={this.mouseLeave}\n            handleTouch={this.handleTouch}\n          />\n          <Popup\n            text={gameStatus}\n            xrayUsed={xrayUsed}\n            score={score}\n            time={time}\n            submitHiscore={this.submitHiscore}\n            closePopup={this.newGame}\n            show={gameStatus !== 'Playing'}\n          />\n        </div>\n        \n        {infoOn ?\n        <GameInfo\n          mines={totalMines} flags={totalFlags} hidden={totalHidden} time={time}\n        /> : null}\n\n        <HiscoreTop10 scoreSubmission={scoreSubmission} />\n        \n        <footer>\n          <a href=\"https://github.com/jistjoalal/DarkSweeper\">\n            <i className=\"fa fa-3x fa-github\"></i>\n          </a>\n          <Link to=\"/hiscores\">\n            <i className=\"fa fa-3x fa-trophy\"></i>\n          </Link>\n        </footer>\n      </div>\n    );\n  }\n  \n  componentDidMount() {\n    this.newGame();\n  }\n  \n  componentDidUpdate() {\n    const { totalHidden, totalMines,\n      nRows, nCols, gameStatus, gridState } = this.state;\n    \n    // new game = calculate nearby numbers, total mines, and reset game\n    if (gameStatus === 'New Game') {\n      this.countNearby();\n      this.setState({\n        totalMines: this.gridReduce((i, j) =>\n          gridState[i][j].hasMine ? 1 : 0),\n        totalFlags: 0,\n        totalHidden: nRows * nCols,\n        time: 0,\n        score: 0,\n        gameStatus: 'Playing'\n      });\n    }\n    \n    // win condition\n    if (totalHidden === totalMines\n      // avoid auto-wins\n      && totalHidden !== nRows * nCols) \n    {\n      // total mines is set to string to prevent infinite loop\n      // and still appear the same\n      this.setState({ gameStatus: 'Scoring',\n      totalMines: totalMines.toString() });\n      // reset grid for scoring\n      clearInterval(this.timer);\n      this.resetGrid();\n    }\n    \n    if (gameStatus === 'Scoring') {\n      this.setState({\n        gameStatus: 'Hashing',\n        score: this.scoreGrid(),\n      });\n    }\n    \n    if (gameStatus === 'Hashing') {\n      const { score, time } = this.state;\n      this.setState({\n        gameStatus: 'Winner!',\n        hash: crypto.createHash('sha1').update(`${score} ${time}`).digest('base64'),\n      });\n    }\n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n  \n  /*\n    Mouse / Touch\n  */\n\n  // 2nd touch point sets flag\n  handleTouch = (e, i, j) => {\n    if (e.changedTouches[0].identifier === 1) {\n      this.handleRightClick(i, j);\n    }\n  }\n  \n  mouseEnter = (e, i, j) => {\n    const { gameStatus } = this.state;\n    if (gameStatus !== 'Playing') { return; }\n    // \"both\" down\n    if (e.buttons === 3) { this.highlightArea(i, j, true); }\n    // middle down\n    if (e.buttons === 4) { this.xrayArea(i, j, true); }\n  }\n  \n  mouseLeave = (e, i, j) => {\n    // \"both\" down\n    if (e.buttons === 3) { this.highlightArea(i, j, false); }\n    // middle down\n    if (e.buttons === 4) { this.xrayArea(i, j, false); }\n  }\n  \n  mouseDown = (e, i, j) => {\n    e.preventDefault(); // prevents click-drag to highlight text\n    const { gameStatus } = this.state;\n    if (gameStatus !== 'Playing') { return; }\n    // \"both\" down\n    if (e.buttons === 3) {\n      this.setState({ ignoreNextClick: true });\n      this.highlightArea(i, j, true);\n    }\n    // middle down\n    if (e.button === 1) { this.xrayArea(i, j, true); }\n  }\n  \n  mouseUp = (e, i, j) => {\n    const { ignoreNextClick, gridState } = this.state;\n\n    // \"both\" up\n    if ([1,2].includes(e.buttons)) {\n      this.setState({ ignoreNextClick: true });\n      this.highlightArea(i, j, false);\n      // if nearby mines == nearby flags, reveal this + nearby tiles\n      // - !hasMine makes simultaneous click safe!\n      if (gridState[i][j].nearby === this.nearbyFlags(i, j)\n        && !gridState[i][j].hasMine)\n      {\n        this.reveal(i, j);\n        this.eachNearby(i, j, (ix, jy) => {\n          this.reveal(ix, jy);\n        });\n      }\n      return;\n    }\n    // middle up\n    if (e.button === 1) { this.xrayArea(i, j, false); }\n    // right up\n    else if (e.button === 2 && !ignoreNextClick) {\n      this.handleRightClick(i, j);\n    }\n    // left up\n    else if (e.button === 0 && !ignoreNextClick) {\n      this.handleClick(i, j);\n    }\n    this.setState({ ignoreNextClick: false });\n  }\n \n  // left click to reveal tile or lose!\n  handleClick = (i, j) => {\n    const { gridState, gameStatus } = this.state;\n    const { flag } = gridState[i][j];\n    \n    // ignore clicks if game is over or tile is flagged\n    if (gameStatus !== 'Playing' || flag) { return; }\n    \n    // reveal clicked tile\n    this.reveal(i, j);\n  }\n  \n  // right click to set flag\n  handleRightClick = (i, j) => {\n    const { gridState, gameStatus, totalFlags } = this.state;\n    const { isRevealed, flag } = gridState[i][j];\n    // ignore clicks if game is over or tile revealed\n    if (gameStatus !== 'Playing' || isRevealed) { return; }\n    \n    // toggle flag\n    this.changeTile(i, j, { flag: !flag });\n    \n    // increment total flags\n    const flagChange = !flag ? 1 : -1;\n    this.setState({ totalFlags: totalFlags + flagChange });\n  }\n  \n  /*\n    Game Config\n */\n  \n  newGame = () => {\n    this.setState({\n      gridState: this.newGridState(), \n      gameStatus: 'New Game',\n      xrayUsed: false\n    });\n    clearInterval(this.timer);\n    this.timer = setInterval(() => this.tick(), 1000);\n  }\n  \n  tick = () => {\n    const { totalHidden, gameStatus, nRows, nCols } = this.state;\n    if (totalHidden !== nRows * nCols && gameStatus === 'Playing') {\n      this.setState({time: this.state.time + 1});\n    }\n  }\n  \n  toggleTheme = () => {\n    const { theme } = this.state;\n    const newTheme = theme === 'dark' ? 'light' : 'dark';\n    this.setState({ theme: newTheme });\n  }\n  \n  toggleInfo = () => {\n    this.setState({ infoOn: !this.state.infoOn });\n  }\n  \n  toggleXray = () => {\n    this.setState({\n      xrayOn: !this.state.xrayOn,\n      xrayUsed: true,\n    });\n  }\n\n  onColChange = e => {\n    const v = parseInt(e.target.value)\n    if (v > 0 && v <= 32) {\n      this.setState({ nCols: parseInt(e.target.value)})\n    }\n  }\n  onRowChange = e => {\n    const v = parseInt(e.target.value)\n    if (v > 0 && v <= 32) {\n      this.setState({ nRows: parseInt(e.target.value)})\n    }\n  }\n  onChanceChange = e => {\n    if (!isNaN(parseFloat(e.target.value))) {\n      this.setState({ chance: parseFloat(e.target.value)})\n    }\n  }\n  \n  /*\n    Scoring\n  */\n  \n  submitHiscore = e => {\n    const name = e.target[0].value;\n    const { score, time, hash } = this.state;\n    const tHash = crypto.createHash('sha1').update(`${score} ${time}`).digest('base64')\n    if (tHash === hash) {\n      this.setState({scoreSubmission: {\n        name, score, time,\n        speed: (score / time)\n      }});\n      this.newGame();\n    }\n    else {\n      this.setState({\n        gameStatus: '🚨 Hacker 🚨',\n      })\n    }\n    e.preventDefault();\n  }\n\n  \n  //hash: `${score} ${time}`\n  \n  scoreGrid = () => {\n    const anyUB = this.anyUnrevealedBlank();\n    const anyUN = this.anyUnrevealedNumbers();\n    // if any unrevealed blank tile, reveal\n    if (anyUB) {\n      this.reveal(anyUB.i, anyUB.j);\n      return 1 + this.scoreGrid();\n    }\n    // else if any unrevealed numbers, reveal\n    else if (anyUN) {\n      this.reveal(anyUN.i, anyUN.j);\n      return 1 + this.scoreGrid();\n    }\n    // else save score\n    else {\n      return 0;\n    }\n  }\n  \n  anyUnrevealedNumbers = () => {\n    const { gridState } = this.state;\n    let any = false;\n    gridState.forEach((row, i) => {\n      row.forEach((tile, j) => {\n        if (!tile.isRevealed && !tile.hasMine) {\n          any = {i, j};\n        }\n      })\n    })\n    return any;\n  }\n  \n  anyUnrevealedBlank = () => {\n    const { gridState } = this.state;\n    let any = false;\n    gridState.forEach((row, i) => {\n      row.forEach((tile, j) => {\n        if (tile.nearby === 0 && !tile.isRevealed && !tile.hasMine) {\n          any = {i, j};\n        }\n      })\n    })\n    return any;\n  }\n  \n  /*\n    Game\n  */\n  \n  // Grid State = 2d array of tile states\n  // - nearby is the # of nearby mines\n  newGridState = () => {\n    const { nRows, nCols, chance } = this.state;\n    return range(nRows).map(i => range(nCols).map(j => {\n      return {\n        isRevealed: false,\n        hasMine: Math.random() < chance,\n        nearby: 0,\n        flag: false,\n        isHighlighted: false,\n        xray: false\n      };\n    }));\n  }\n  \n  resetGrid = () => {\n    this.everyTile((i, j) => \n      this.changeTile(i, j, { isRevealed: false, flag: false }))\n  }\n  \n  xrayArea = (i, j, toggle) => {\n    this.changeTile(i, j, { xray: toggle });\n    this.eachNearby(i, j, (ix, jy) => {\n      this.changeTile(ix, jy, { xray: toggle });\n    });\n    this.setState({ xrayUsed: true });\n  }\n  \n  highlightArea = (i, j, toggle) => {\n    const { gridState } = this.state;\n    // highlight self + nearby unflagged tiles\n    this.changeTile(i, j, { isHighlighted: toggle })\n    this.eachNearby(i, j, (ix, jy) => {\n      if (!gridState[ix][jy].flag) {\n        this.changeTile(ix, jy, { isHighlighted: toggle });\n      }\n    })\n  }\n  \n  // revealed tiles that have 0 nearby mines reveal adjacent tiles\n  reveal = (i, j) => {\n    const { gridState } = this.state;\n    const { nearby, hasMine, flag } = gridState[i][j];\n    \n    // recursion break\n    if (gridState[i][j].isRevealed || flag) { return 0; }\n\n    // check mine\n    if (hasMine) {\n      this.changeTile(i, j, {isRevealed: true});\n      return this.setState({ gameStatus: 'Game Over'});\n    }\n    \n    // reveal tile\n    this.changeTile(i, j, {isRevealed: true});\n    \n    // recount of totalHidden\n    this.setState({\n      totalHidden: this.gridReduce((i, j) =>\n        gridState[i][j].isRevealed ? 0 : 1\n      ),\n    });\n    \n    // recursively clear adjacent tiles if 0 nearby\n    if (nearby === 0 && !hasMine) {\n      this.eachNearby(i, j, (ix, jy) => {\n        this.reveal(ix, jy);\n      });\n    }\n  }\n  \n  // calculates nearby mines for every tile\n  countNearby = () => {\n    this.everyTile((i, j) =>\n      this.changeTile(i, j, { nearby: this.nearbyMines(i, j) }));\n  }\n  \n  // returns # of mines nearby tile @ (i, j)\n  nearbyMines = (i, j) => {\n    const { gridState } = this.state;\n    let sum = 0;\n    this.eachNearby(i, j, (ix, jy) =>\n      sum += gridState[ix][jy].hasMine ? 1 : 0);\n    return sum;\n  }\n  \n  // returns # of flags nearby tile @ (i, j)\n  nearbyFlags = (i, j) => {\n    const { gridState } = this.state;\n    let sum = 0;\n    this.eachNearby(i, j, (ix, jy) =>\n      sum += gridState[ix][jy].flag ? 1 : 0);\n    return sum;\n  }\n  \n  // runs callback on each nearby tile that exists\n  eachNearby = (i, j, callback) => {\n    NEARBY_COORDS.forEach(c => {\n      const ix = i + c[0],\n            jy = j + c[1];\n      if (this.validTile(ix, jy)) {\n        callback(ix, jy);\n      }\n    });\n  }\n  \n  // 2d array summing thing\n  gridReduce = reducer => {\n    let sum = 0;\n    this.everyTile((i, j) =>\n      sum += reducer(i, j));\n    return sum;\n  }\n  \n  // assign change to tile @ (i, j)\n  changeTile = (i, j, change) => {\n    const gridState = this.state.gridState.slice();\n    Object.assign(gridState[i][j], change);\n    this.setState({ gridState });\n  }\n  \n  // callback to 2d array\n  everyTile = callback =>\n    this.state.gridState.map((row, i) => row.map((tile, j) => callback(i, j)))\n  \n  // boolean if tile exists at i,j coords\n  validTile = (i, j) =>\n    typeof this.state.gridState[i] === 'undefined' ? false :\n      typeof this.state.gridState[i][j] !== 'undefined'\n}\n\nexport default Game;","import React, {Component} from 'react';\nimport { graphql } from 'react-apollo';\n\nimport { getHiscoresQuery } from '../queries';\n\nimport { Hiscore } from './generic';\n\nclass HiscorePage extends Component {\n\n  render() {\n    return (\n      <div className=\"Hiscores\">\n        <li className=\"Hiscore\">\n          <span className=\"HiscoreHeader\">Name</span>\n          <span className=\"HiscoreHeader\">EBV / s</span>\n        </li>\n        {this.displayHiscores()}\n      </div>\n    )\n  }\n\n  displayHiscores = () => {\n    const { data } = this.props;\n    if (data.loading) {\n      return <i className=\"fa fa-2x fa-circle-o-notch fa-spin\"></i>;\n    }\n    else {\n      if (!data.hiscores) {\n        return <span>Couldn't connect to DB</span>\n      }\n      return data.hiscores.map(hiscore => {\n        return <Hiscore key={hiscore.id} {...hiscore} />\n      })\n    }\n  }\n}\n\nexport default graphql(getHiscoresQuery, {\n  options: props => ({\n    variables: {\n      page: props.page,\n    }\n  })\n})(HiscorePage);","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport HiscorePage from './HiscorePage';\nimport TitleBar from './TitleBar';\n\nimport '../index.scss';\n\nclass HiscorePages extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      page: 0,\n    }\n  }\n  render() {\n    const { page } = this.state;\n    return (\n      <div className=\"HiscorePage\">\n        <TitleBar title=\"Hiscores\" />\n\n        <HiscorePage page={page} />\n\n        <footer>\n          <button onClick={this.prevPage} className={`App-button`}>\n            <i className=\"fa fa-3x fa-arrow-left\"></i>\n          </button>\n          <Link to=\"/\">\n            <i className=\"fa fa-3x fa-undo\"></i>\n          </Link>\n          <button onClick={this.nextPage} className={`App-button`}>\n            <i className=\"fa fa-3x fa-arrow-right\"></i>\n          </button>\n        </footer>\n     </div>\n    )\n  }\n\n  prevPage = () => {\n    this.setState(state => {\n      if (state.page > 0) {\n        return { page: state.page - 1 };\n      }\n    })\n  }\n\n  nextPage = () => {\n    this.setState(state => ({ page: state.page + 1 }))\n  }\n}\n\nexport default HiscorePages;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\nimport Game from './components/Game';\nimport HiscorePages from './components/HiscorePages';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={Game} />\n            <Route path=\"/hiscores\" component={HiscorePages} />\n            <Route component={Game} />\n          </Switch>\n        </Router>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n    module.hot.accept();\n}\n"],"sourceRoot":""}