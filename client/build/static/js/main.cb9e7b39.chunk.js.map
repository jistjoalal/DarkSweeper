{"version":3,"sources":["img/logo.svg","components/generic.js","components/Tile.js","components/TileGrid.js","components/GameInfo.js","components/GameButtons.js","components/Popup.js","components/Hiscores.js","components/Game.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","HiddenToggle","props","show","children","range","n","Object","toConsumableArray","Array","keys","Tile","_this$props","this","isRevealed","hasMine","nearby","flag","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","xray","theme","react_default","a","createElement","className","concat","onContextMenu","e","preventDefault","Tile_Over","Tile_Under","Component","Over","_ref","Tile_Flag","Under","_ref2","Tile_Mine","Tile_ColoredNumber","ColoredNumber","_ref3","Mine","src","logo","alt","Flag","TileGrid","renderTileAt","i","j","_this$props$gridState","_this","gridState","isHighlighted","isR","hasM","nB","components_Tile","mouseDown","mouseUp","mouseEnter","mouseLeave","_this2","length","map","key","GameInfo","mines","hidden","time","role","aria-label","href","target","GameButtons","newGame","infoOn","xrayOn","toggleInfo","toggleXray","toggleTheme","onClick","Popup","text","score","onSubmit","submitHiscore","autoFocus","type","placeholder","value","closePopup","getHiscoresQuery","gql","_templateObject","addHiscoreMutation","_templateObject2","Hiscores","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayHiscores","data","loading","hiscores","hiscore","Hiscores_Hiscore","assign","id","scoreSubmission","alert","variables","objectSpread","refetchQueries","query","state","lastSubmission","setState","Hiscore","name","compose","graphql","NEARBY_COORDS","Game","gameStatus","buttons","highlightArea","xrayArea","ignoreNextClick","button","_this$state","includes","nearbyFlags","reveal","eachNearby","ix","jy","handleRightClick","handleClick","_this$state2","_this$state3","totalFlags","_gridState$i$j","changeTile","flagChange","_this$state4","nRows","nCols","newGridState","currentSize","clearInterval","timer","setInterval","tick","_this$state5","totalHidden","newTheme","submitSize","isNaN","onColChange","parseInt","onRowChange","onChanceChange","parseFloat","chance","_this$state6","scoreGrid","anyUB","anyUnrevealedBlank","anyUN","anyUnrevealedNumbers","any","forEach","row","tile","_this$state7","Math","random","resetGrid","everyTile","toggle","_gridState$i$j2","countNearby","nearbyMines","sum","callback","c","validTile","gridReduce","reducer","change","slice","totalMines","_this$state8","components_GameButtons","min","max","onChange","onKeyUp","step","components_TileGrid","components_Popup","components_GameInfo","flags","components_Hiscores","_this$state9","toString","client","ApolloClient","uri","process","PORT","App","react_apollo_browser_umd","src_components_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cb9e7b39.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.eed724ad.svg\";","const HiddenToggle = props => {\r\n  if (props.show) {\r\n      return props.children;\r\n  }return null;\r\n};\r\n\r\n// number range helper\r\nconst range = n => [...Array(n).keys()];\r\n\r\nexport { HiddenToggle, range };","import React, { Component } from 'react';\r\n\r\nimport logo from '../img/logo.svg';\r\n\r\nclass Tile extends Component {\r\n  render() {\r\n    const { isRevealed, hasMine, nearby, flag,\r\n      onMouseDown, onMouseUp, onMouseEnter, onMouseLeave,\r\n      xray, theme } = this.props;\r\n    \r\n    return (\r\n      <div className={`Tile-${theme}`}\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onContextMenu={e => e.preventDefault()}\r\n      >\r\n        <Over isRevealed={isRevealed} flag={flag} xray={xray} theme={theme}>\r\n          <Under hasMine={hasMine} nearby={nearby} />\r\n        </Over>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// covers revealed tiles\r\nconst Over = ({ isRevealed, flag, children, xray, theme }) =>\r\n  isRevealed ? children :\r\n    <div className={`Cover-${theme}`}>\r\n      {flag ? <Flag /> : xray ? children : null}\r\n    </div>;\r\n  \r\n// whats underneath tile?\r\nconst Under = ({ hasMine, nearby }) =>\r\n  hasMine ? <Mine /> : <ColoredNumber n={nearby} />\r\n\r\n// minesweeper colors in the css!\r\nconst ColoredNumber = ({ n }) =>\r\n  <span className={`nearby${n}`}>\r\n    {n !== 0 ? n : null}\r\n  </span>;\r\n\r\nconst Mine = () => <img className=\"Mine\" src={logo} alt=\"X\" />;\r\n  \r\nconst Flag = () => <span className=\"Flag\">F</span>;\r\n\r\nexport default Tile;","import React, { Component } from 'react';\r\n\r\nimport Tile from './Tile';\r\n\r\nconst range = n => [...Array(n).keys()];\r\n\r\nclass TileGrid extends Component {\r\n  \r\n  render() {\r\n    const { gridState } = this.props;\r\n    if (gridState === null) { return null; }\r\n    return range(gridState.length).map((i) =>\r\n      <div key={i} className=\"Game-grid-row\">\r\n        {range(gridState[i].length).map((j) =>\r\n          <this.renderTileAt key={`${i},${j}`} i={i} j={j} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderTileAt = ({ i, j }) => {\r\n    const { isRevealed, hasMine, nearby, flag,\r\n      isHighlighted, xray } = this.props.gridState[i][j];\r\n    // display highlighted tiles as blank\r\n    const isR = isHighlighted ? true : isRevealed,\r\n          hasM = isHighlighted ? false : hasMine,\r\n          nB = isRevealed ? nearby : isHighlighted ? 0 : nearby;\r\n    return <Tile\r\n      isRevealed={isR}\r\n      hasMine={hasM}\r\n      nearby={nB}\r\n      flag={flag}\r\n      xray={xray || this.props.xray}\r\n      theme={this.props.theme}\r\n      onMouseDown={e => this.props.mouseDown(e, i, j)}\r\n      onMouseUp={e => this.props.mouseUp(e, i, j)}\r\n      onMouseEnter={e => this.props.mouseEnter(e, i, j)}\r\n      onMouseLeave={e => this.props.mouseLeave(e, i, j)}\r\n    />;\r\n  }\r\n}\r\n\r\nexport default TileGrid;","import React from 'react';\r\n\r\n// mines left, etc.\r\nconst GameInfo = ({ mines, hidden, time }) =>\r\n  <div className=\"Game-info\">\r\n    <p>\r\n      <span role=\"img\" aria-label=\"bomb\">💣</span> {mines}\r\n      <span role=\"img\" aria-label=\"question\"> ❓</span> {hidden}\r\n      <span role=\"img\" aria-label=\"timer\"> ⏱</span> {time}\r\n    </p>\r\n    <p>\r\n      <span role=\"img\" aria-label=\"ok\">👌 </span>\r\n      Click around with right+left click for a safe start!\r\n    </p>\r\n    <p>\r\n      <span role=\"img\" aria-label=\"score\">💯 </span>\r\n      <a href=\"http://www.minesweeper.info/wiki/3BV\" target=\"blank\">\r\n        Difficulty = minimum # of left clicks to win\r\n      </a>\r\n    </p>\r\n    <p>\r\n      <span role=\"img\" aria-label=\"radioactive\">☢ </span>\r\n      Use middle click to xray (cheat) the area.\r\n    </p>\r\n  </div>;\r\n\r\nexport default GameInfo;","import React, { Component } from 'react';\r\n\r\nclass GameButtons extends Component {\r\n  \r\n  render() {\r\n    const { newGame, infoOn, xrayOn, theme,\r\n      toggleInfo, toggleXray, toggleTheme } = this.props;\r\n    return (\r\n      <div className=\"GameButtons\">\r\n        <button onClick={newGame}\r\n          className=\"Game-button\"\r\n        >New Game\r\n        </button>\r\n        <button onClick={toggleInfo}\r\n          className={`Game-button${infoOn ? ' toggle' : ''}`}\r\n        >Game Info\r\n        </button>\r\n        <button onClick={toggleXray}\r\n          className={`Game-button${xrayOn ? ' toggle' : ''}`}\r\n        >X-RAY\r\n        </button>\r\n        <button onClick={toggleTheme}\r\n          className={`Game-button${theme === 'light' ? ' toggle' : ''}`}\r\n        >Theme\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameButtons;","import React from 'react';\r\n\r\nimport { HiddenToggle } from './generic';\r\n\r\n// popup message\r\nconst Popup = props =>\r\n  <HiddenToggle show={props.show}>\r\n    <div className=\"Popup\" onContextMenu={e => e.preventDefault()}>\r\n      <div className=\"Popup-inner\">\r\n        <p>{props.text}</p>\r\n        \r\n        {props.text === 'Winner!' ?\r\n          <div className=\"Popup-score\">\r\n            <p>\r\n              Difficulty: {props.score} | Time: {props.time}\r\n            </p>\r\n            <form onSubmit={e => props.submitHiscore(e)}>\r\n              <input autoFocus className=\"Popup-name\" type=\"text\" placeholder=\"Name\" />\r\n              <input className=\"Popup-submit\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n          </div>\r\n        : null}\r\n        \r\n        <button className=\"close\" onClick={props.closePopup}>Back</button>\r\n      </div>\r\n    </div>\r\n  </HiddenToggle>;\r\n\r\nexport default Popup;","import React, {Component} from 'react';\r\nimport { graphql, compose } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\n\r\nconst getHiscoresQuery = gql`\r\n  {\r\n    hiscores{\r\n      id\r\n      name\r\n      score\r\n      time\r\n    }\r\n  }\r\n`;\r\n\r\nconst addHiscoreMutation = gql`\r\n  mutation($name: String!, $score: Int!, $time: Int!){\r\n    addHiscore(name: $name, score: $score, time: $time){\r\n      id\r\n      name\r\n      score\r\n      time\r\n    }\r\n  }\r\n`;\r\n\r\n// TODO: sort by (score / time) somehow\r\n// TODO: pagination\r\n// TODO: scores by date (last day, week, etc.)\r\nclass Hiscores extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastSubmission: null,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { scoreSubmission } = this.props;\r\n    const { lastSubmission } = this.state;\r\n    if (scoreSubmission !== lastSubmission) {\r\n      this.setState({ lastSubmission: scoreSubmission });\r\n      this.submitHiscore();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HiscoreView\">\r\n        <h2>Hiscores:</h2>\r\n        <ul className=\"Hiscores\">\r\n          {this.displayHiscores()}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  displayHiscores = () => {\r\n    const data = this.props.getHiscoresQuery;\r\n    if (data.loading) {\r\n      return <li>Loading Hiscores...</li>;\r\n    }\r\n    else {\r\n      return data.hiscores.map(hiscore => {\r\n        return <Hiscore key={hiscore.id} {...hiscore} />\r\n      })\r\n    }\r\n  }\r\n\r\n  submitHiscore = () => {\r\n    const { scoreSubmission } = this.props;\r\n    if (scoreSubmission.score < 2){\r\n      alert('score too low to submit :(');\r\n      return;\r\n    }\r\n    this.props.addHiscoreMutation({\r\n      variables: { ...scoreSubmission },\r\n      refetchQueries: [{ query: getHiscoresQuery }],\r\n    })\r\n  }\r\n}\r\n\r\nconst Hiscore = ({ name, score, time, id }) =>\r\n  <li className=\"Hiscore\">\r\n    {name} | {score} | {time}\r\n  </li>\r\n\r\nexport default compose(\r\n  graphql(getHiscoresQuery, {name: 'getHiscoresQuery'}),\r\n  graphql(addHiscoreMutation, {name: 'addHiscoreMutation'}),\r\n)(Hiscores);","import React, {Component} from 'react';\r\n\r\nimport './Game.scss';\r\n\r\nimport { range } from './generic';\r\nimport TileGrid from './TileGrid';\r\nimport GameInfo from './GameInfo';\r\nimport GameButtons from './GameButtons';\r\nimport Popup from './Popup';\r\nimport Hiscores from './Hiscores';\r\n\r\n// adjacent tiles\r\nconst NEARBY_COORDS = [\r\n  [-1, -1], [0, -1], [1, -1],\r\n  [-1, 0], /*[0, 0],*/ [1,0],\r\n  [-1, 1], [0, 1], [1,1]\r\n];\r\n  \r\n\r\n// TODO: setting flag doesnt work on mobile now (highlights numbers)\r\n// TODO: win/lose animation/sound?\r\n// TODO: timer store minutes?\r\n// TODO: refactor\r\n// TODO: switching b/w game + hiscores / toggle button\r\nclass Game extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // grid\r\n      nRows: 10,\r\n      nCols: 10,\r\n      currentSize: {nRows: 10, nCols: 10},\r\n      chance: 0.1,\r\n      gridState: null,\r\n      // info\r\n      totalMines: 0,\r\n      totalFlags: 0,\r\n      totalHidden: 100,\r\n      gameStatus: 'Loading',\r\n      time: 0,\r\n      score: 0,\r\n      // menu\r\n      theme: 'dark',\r\n      xrayOn: false,\r\n      infoOn: false,\r\n      // internal\r\n      ignoreNextClick: false,\r\n      scoreSubmission: null\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    const { gameStatus, gridState, nRows, nCols, chance,\r\n      totalMines, totalFlags, totalHidden,\r\n      xrayOn, infoOn, theme, time, score, scoreSubmission } = this.state;\r\n      \r\n    return (\r\n      <div className=\"Game\">\r\n\r\n        <div className=\"Game-menu\">\r\n\r\n          <GameButtons\r\n            newGame={this.newGame}\r\n            infoOn={infoOn}\r\n            xrayOn={xrayOn}\r\n            theme={theme}\r\n            toggleInfo={this.toggleInfo}\r\n            toggleXray={this.toggleXray}\r\n            toggleTheme={this.toggleTheme}\r\n          />\r\n          \r\n          {/** TODO: factor out GameInputs */}\r\n          <div>\r\n            <input className=\"Game-input\"\r\n              type=\"number\" value={nCols} min={1} max={64}\r\n              onChange={this.onColChange}\r\n              onKeyUp={this.submitSize}/>\r\n            x<input className=\"Game-input\"\r\n              type=\"number\" value={nRows} min={1} max={64}\r\n              onChange={this.onRowChange}\r\n              onKeyUp={this.submitSize}/>\r\n            x<input className=\"Game-input\"\r\n              type=\"number\" value={chance} min={0} max={1.0} step={0.01}\r\n              onChange={this.onChanceChange}\r\n              onKeyUp={this.submitSize}/>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Game-grid\">\r\n        \r\n          <TileGrid\r\n            gridState={gridState}\r\n            xray={xrayOn}\r\n            theme={theme}\r\n            mouseDown={this.mouseDown}\r\n            mouseUp={this.mouseUp}\r\n            mouseEnter={this.mouseEnter}\r\n            mouseLeave={this.mouseLeave}\r\n          />\r\n          \r\n          <Popup show={gameStatus !== 'Playing'} text={gameStatus}\r\n            submitHiscore={this.submitHiscore} score={score} time={time}\r\n            closePopup={this.newGame}/>\r\n          \r\n        </div>\r\n        \r\n        {infoOn ?\r\n        <GameInfo\r\n          mines={totalMines} flags={totalFlags} hidden={totalHidden} time={time}\r\n        /> : null}\r\n\r\n        <Hiscores scoreSubmission={scoreSubmission} />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.newGame();\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    const { totalHidden, totalMines,\r\n      nRows, nCols, gameStatus, gridState } = this.state;\r\n    \r\n    // new game = calculate nearby numbers, total mines, and reset game\r\n    if (gameStatus === 'New Game') {\r\n      this.countNearby();\r\n      this.setState({\r\n        totalMines: this.gridReduce((i, j) =>\r\n          gridState[i][j].hasMine ? 1 : 0),\r\n        totalFlags: 0,\r\n        totalHidden: nRows * nCols,\r\n        time: 0,\r\n        score: 0,\r\n        gameStatus: 'Playing'\r\n      });\r\n    }\r\n    \r\n    // update totalhidden\r\n    if (gameStatus === 'Calculating') {\r\n      this.setState({\r\n        totalHidden: this.gridReduce((i, j) =>\r\n          gridState[i][j].isRevealed ? 0 : 1),\r\n        gameStatus: 'Playing'\r\n      });\r\n    }\r\n    \r\n    // win condition\r\n    if (totalHidden === totalMines) {\r\n      // total mines is set to string to prevent infinite loop\r\n      // and still appear the same\r\n      this.setState({ gameStatus: 'Scoring',\r\n      totalMines: totalMines.toString() });\r\n      // reset grid for scoring\r\n      clearInterval(this.timer);\r\n      this.resetGrid();\r\n    }\r\n    \r\n    if (gameStatus === 'Scoring') {\r\n      this.setState({\r\n        gameStatus: 'Winner!',\r\n        score: this.scoreGrid()\r\n      });\r\n    }\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n  \r\n  /*\r\n    Mouse\r\n  */\r\n  \r\n  mouseEnter = (e, i, j) => {\r\n    const { gameStatus } = this.state;\r\n    if (gameStatus !== 'Playing') { return; }\r\n    // \"both\" down\r\n    if (e.buttons === 3) { this.highlightArea(i, j, true); }\r\n    // middle down\r\n    if (e.buttons === 4) { this.xrayArea(i, j, true); }\r\n  }\r\n  \r\n  mouseLeave = (e, i, j) => {\r\n    // \"both\" down\r\n    if (e.buttons === 3) { this.highlightArea(i, j, false); }\r\n    // middle down\r\n    if (e.buttons === 4) { this.xrayArea(i, j, false); }\r\n  }\r\n  \r\n  mouseDown = (e, i, j) => {\r\n    e.preventDefault(); // prevents click-drag to highlight text\r\n    const { gameStatus } = this.state;\r\n    if (gameStatus !== 'Playing') { return; }\r\n    // \"both\" down\r\n    if (e.buttons === 3) {\r\n      this.setState({ ignoreNextClick: true });\r\n      this.highlightArea(i, j, true);\r\n    }\r\n    // middle down\r\n    if (e.button === 1) { this.xrayArea(i, j, true); }\r\n  }\r\n  \r\n  mouseUp = (e, i, j) => {\r\n    const { ignoreNextClick, gridState } = this.state;\r\n    // \"both\" up\r\n    if ([1,2].includes(e.buttons)) {\r\n      this.setState({ ignoreNextClick: true });\r\n      this.highlightArea(i, j, false);\r\n      // if nearby mines == nearby flags, reveal this + nearby tiles\r\n      // - !hasMine makes simultaneous click safe!\r\n      if (gridState[i][j].nearby === this.nearbyFlags(i, j)\r\n        && !gridState[i][j].hasMine)\r\n      {\r\n        this.reveal(i, j);\r\n        this.eachNearby(i, j, (ix, jy) => {\r\n          this.reveal(ix, jy);\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    // middle up\r\n    if (e.button === 1) { this.xrayArea(i, j, false); }\r\n    // left up\r\n    else if (e.button === 0 && !ignoreNextClick) {\r\n      this.handleClick(i, j);\r\n    }// right up\r\n    else if (e.button === 2 && !ignoreNextClick) {\r\n      this.handleRightClick(i, j);\r\n    }\r\n    this.setState({ ignoreNextClick: false });\r\n  }\r\n \r\n  // left click to reveal tile or lose!\r\n  handleClick = (i, j) => {\r\n    const { gridState, gameStatus } = this.state;\r\n    const { flag } = gridState[i][j];\r\n    \r\n    // ignore clicks if game is over or tile is flagged\r\n    if (gameStatus !== 'Playing' || flag) { return; }\r\n    \r\n    // reveal clicked tile\r\n    this.reveal(i, j);\r\n  }\r\n  \r\n  // right click to set flag\r\n  handleRightClick = (i, j) => {\r\n    const { gridState, gameStatus, totalFlags } = this.state;\r\n    const { isRevealed, flag } = gridState[i][j];\r\n   \r\n    // ignore clicks if game is over or tile revealed\r\n    if (gameStatus !== 'Playing' || isRevealed) { return; }\r\n    \r\n    // toggle flag\r\n    this.changeTile(i, j, { flag: !flag });\r\n    \r\n    // increment total flags\r\n    const flagChange = !flag ? 1 : -1;\r\n    this.setState({ totalFlags: totalFlags + flagChange });\r\n  }\r\n  \r\n  /*\r\n    Game Config\r\n */\r\n  \r\n  newGame = () => {\r\n    const { nRows, nCols } = this.state; \r\n    this.setState({\r\n      gridState: this.newGridState(), \r\n      gameStatus: 'New Game',\r\n      currentSize: {nRows, nCols}\r\n    });\r\n    clearInterval(this.timer);\r\n    this.timer = setInterval(() => this.tick(), 1000);\r\n  }\r\n  \r\n  tick = () => {\r\n    const { totalHidden, gameStatus, currentSize } = this.state;\r\n    const { nRows, nCols } = currentSize;\r\n    if (totalHidden !== nRows * nCols && gameStatus === 'Playing') {\r\n      this.setState({time: this.state.time + 1});\r\n    }\r\n  }\r\n  \r\n  toggleTheme = () => {\r\n    const { theme } = this.state;\r\n    const newTheme = theme === 'dark' ? 'light' : 'dark';\r\n    this.setState({ theme: newTheme });\r\n  }\r\n  \r\n  toggleInfo = () => {\r\n    this.setState({ infoOn: !this.state.infoOn });\r\n  }\r\n  \r\n  toggleXray = () => {\r\n    this.setState({ xrayOn: !this.state.xrayOn });\r\n  }\r\n\r\n  // Grid size\r\n  submitSize = e => {\r\n    if (!isNaN(e.target.value)) {\r\n      this.newGame();\r\n    }\r\n  }\r\n  onColChange = e => {\r\n    if (!isNaN(parseInt(e.target.value))) {\r\n      this.setState({ nCols: parseInt(e.target.value)})\r\n    }\r\n  }\r\n  onRowChange = e => {\r\n    if (!isNaN(parseInt(e.target.value))) {\r\n      this.setState({ nRows: parseInt(e.target.value)})\r\n    }\r\n  }\r\n  onChanceChange = e => {\r\n    if (!isNaN(parseFloat(e.target.value))) {\r\n      this.setState({ chance: parseFloat(e.target.value)})\r\n    }\r\n  }\r\n  \r\n  /*\r\n    Scoring\r\n  */\r\n  \r\n  submitHiscore = e => {\r\n    const name = e.target[0].value;\r\n    const { score, time } = this.state;\r\n    this.setState({scoreSubmission: {\r\n      name, score, time\r\n    }});\r\n    this.newGame();\r\n    e.preventDefault();\r\n  }\r\n  \r\n  scoreGrid = () => {\r\n    const anyUB = this.anyUnrevealedBlank();\r\n    const anyUN = this.anyUnrevealedNumbers();\r\n    // if any unrevealed blank tile, reveal\r\n    if (anyUB) {\r\n      this.reveal(anyUB.i, anyUB.j);\r\n      return 1 + this.scoreGrid();\r\n    }\r\n    // else if any unrevealed numbers, reveal\r\n    else if (anyUN) {\r\n      this.reveal(anyUN.i, anyUN.j);\r\n      return 1 + this.scoreGrid();\r\n    }\r\n    // else save score\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  anyUnrevealedNumbers = () => {\r\n    const { gridState } = this.state;\r\n    let any = false;\r\n    gridState.forEach((row, i) => {\r\n      row.forEach((tile, j) => {\r\n        if (!tile.isRevealed && !tile.hasMine) {\r\n          any = {i, j};\r\n        }\r\n      })\r\n    })\r\n    return any;\r\n  }\r\n  \r\n  anyUnrevealedBlank = () => {\r\n    const { gridState } = this.state;\r\n    let any = false;\r\n    gridState.forEach((row, i) => {\r\n      row.forEach((tile, j) => {\r\n        if (tile.nearby === 0 && !tile.isRevealed && !tile.hasMine) {\r\n          any = {i, j};\r\n        }\r\n      })\r\n    })\r\n    return any;\r\n  }\r\n  \r\n  /*\r\n    Game\r\n  */\r\n  \r\n  // Grid State = 2d array of tile states\r\n  // - nearby is the # of nearby mines\r\n  newGridState = () => {\r\n    const { nRows, nCols, chance } = this.state;\r\n    return range(nRows).map(i => range(nCols).map(j => {\r\n      return {\r\n        isRevealed: false,\r\n        hasMine: Math.random() < chance,\r\n        nearby: 0,\r\n        flag: false,\r\n        isHighlighted: false,\r\n        xray: false\r\n      };\r\n    }));\r\n  }\r\n  \r\n  resetGrid = () => {\r\n    this.everyTile((i, j) => \r\n      this.changeTile(i, j, { isRevealed: false, flag: false }))\r\n  }\r\n  \r\n  xrayArea = (i, j, toggle) => {\r\n    this.changeTile(i, j, { xray: toggle });\r\n    this.eachNearby(i, j, (ix, jy) => {\r\n      this.changeTile(ix, jy, { xray: toggle });\r\n    })\r\n  }\r\n  \r\n  highlightArea = (i, j, toggle) => {\r\n    const { gridState } = this.state;\r\n    // highlight self + nearby unflagged tiles\r\n    this.changeTile(i, j, { isHighlighted: toggle })\r\n    this.eachNearby(i, j, (ix, jy) => {\r\n      if (!gridState[ix][jy].flag) {\r\n        this.changeTile(ix, jy, { isHighlighted: toggle });\r\n      }\r\n    })\r\n  }\r\n  \r\n  // revealed tiles that have 0 nearby mines reveal adjacent tiles\r\n  reveal = (i, j) => {\r\n    const { gridState } = this.state;\r\n    const { nearby, hasMine, flag } = gridState[i][j];\r\n    \r\n    // recursion break\r\n    if (gridState[i][j].isRevealed || flag) { return 0; }\r\n\r\n    // check mine\r\n    if (hasMine) {\r\n      this.changeTile(i, j, {isRevealed: true});\r\n      return this.setState({ gameStatus: 'Game Over'});\r\n    }\r\n    \r\n    // reveal tile\r\n    this.changeTile(i, j, {isRevealed: true});\r\n    \r\n    // this will trigger recount of totalHidden in componentDidUpdate\r\n    this.setState({ gameStatus: 'Calculating' });\r\n    \r\n    // recursively clear adjacent tiles if 0 nearby\r\n    if (nearby === 0 && !hasMine) {\r\n      this.eachNearby(i, j, (ix, jy) => {\r\n        this.reveal(ix, jy);\r\n      });\r\n    }\r\n  }\r\n  \r\n  // calculates nearby mines for every tile\r\n  countNearby = () => {\r\n    this.everyTile((i, j) =>\r\n      this.changeTile(i, j, { nearby: this.nearbyMines(i, j) }));\r\n  }\r\n  \r\n  // returns # of mines nearby tile @ (i, j)\r\n  nearbyMines = (i, j) => {\r\n    const { gridState } = this.state;\r\n    let sum = 0;\r\n    this.eachNearby(i, j, (ix, jy) =>\r\n      sum += gridState[ix][jy].hasMine ? 1 : 0);\r\n    return sum;\r\n  }\r\n  \r\n  // returns # of flags nearby tile @ (i, j)\r\n  nearbyFlags = (i, j) => {\r\n    const { gridState } = this.state;\r\n    let sum = 0;\r\n    this.eachNearby(i, j, (ix, jy) =>\r\n      sum += gridState[ix][jy].flag ? 1 : 0);\r\n    return sum;\r\n  }\r\n  \r\n  // runs callback on each nearby tile that exists\r\n  eachNearby = (i, j, callback) => {\r\n    NEARBY_COORDS.forEach(c => {\r\n      const ix = i + c[0],\r\n            jy = j + c[1];\r\n      if (this.validTile(ix, jy)) {\r\n        callback(ix, jy);\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 2d array summing thing\r\n  gridReduce = reducer => {\r\n    let sum = 0;\r\n    this.everyTile((i, j) =>\r\n      sum += reducer(i, j));\r\n    return sum;\r\n  }\r\n  \r\n  // assign change to tile @ (i, j)\r\n  changeTile = (i, j, change) => {\r\n    const gridState = this.state.gridState.slice();\r\n    Object.assign(gridState[i][j], change);\r\n    this.setState({ gridState });\r\n  }\r\n  \r\n  // callback to 2d array\r\n  everyTile = callback =>\r\n    this.state.gridState.map((row, i) => row.map((tile, j) => callback(i, j)))\r\n  \r\n  // boolean if tile exists at i,j coords\r\n  validTile = (i, j) =>\r\n    typeof this.state.gridState[i] === 'undefined' ? false :\r\n      typeof this.state.gridState[i][j] !== 'undefined'\r\n}\r\n\r\nexport default Game;","import React, {Component} from 'react';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\n\r\nimport Game from './components/Game';\r\n\r\nconst client = new ApolloClient({\r\n  uri: `http://localhost:${process.env.PORT || 3001}/graphql`\r\n})\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <Game />\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nif (module.hot) {\r\n    module.hot.accept();\r\n}\r\n"],"sourceRoot":""}